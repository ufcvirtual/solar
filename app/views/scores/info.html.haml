.block_wrapper#scores
  .block_title
    %h2
      %i.icon-suitcase
      = @user.nick

  .info.block_content
    .left
      = image_tag @user.user_photo(:medium), alt: t(:mysolar_alt_img_user)
      - if @is_student
        = render partial: 'scores/info/summary', locals: {user: @user, allocation_tag_id: @allocation_tag_id}
    .evaluation_info
      %div{style: 'font-weight: bold; font-size: 12pt'}= @user.name
      %div= raw @curriculum_unit.try(:working_hours).nil? ? t('.uc_without_wh') : t('.frequency_uc', wh: @curriculum_unit.try(:working_hours))
      %div
        = raw t('.responsibles')
        - @responsible.each do |resp|
          .participant{:'data-tooltip'=> resp.name + " (" + resp.profile_name + ") "}
            = truncate( [resp.name, " (", resp.profile_name, " )"].join, length: 55, omission: '...' )

    .scores_menu
      %a.btn.btn_main.tool_dropdown{href: '#', :'data-dropdown' => "#dropdown_menu", onkeydown: 'click_on_keypress(event, this);'}
        = content_tag(:i, nil, class: 'icon-list')
        = t('scores.index.show_hide_tools')
        %i.icon-arrow-down-triangle
      #dropdown_menu.dropdown.dropdown-tip
        %ul.dropdown-menu
          - @types.each_with_index do |tool, idx|
            %li
              = check_box_tag "#{tool.last}", tool.last, false, :"data-url-search" => search_tool_scores_path(type: tool.last), :'data-shortcut' => t("shortcut.scores.code.#{tool.last}"), :'data-shortcut-name' => t("shortcut.scores.name.#{tool.last}")
              = label_tag "#{tool.last}", tool.first


    - if @is_student
      .info_right
        = label_tag t(:reports, scope: [:scores, :info])
        .links
          = link_to t(:all, scope: [:scores, :info]), reports_pdf_scores_path(tool: true, user_id: @user.id, format: "pdf", type: '',), :target => "_blank", class: "btn", :'aria-label' => t(:report_all, scope: [:scores, :info])
          = link_to t(:evaluative, scope: [:scores, :info]), reports_pdf_scores_path(evaluative: true, type: '_evaluative', user_id: @user.id, format: "pdf"), :target => "_blank", class: "btn", :'aria-label' => t(:report_evaluative, scope: [:scores, :info])
          = link_to t(:frequency, scope: [:scores, :info]), reports_pdf_scores_path(frequency: true, user_id: @user.id, type: '_frequency', format: "pdf"), :target => "_blank", class: "btn", :'aria-label' => t(:report_frequency, scope: [:scores, :info])
          = link_to t(:not_evaluative, scope: [:scores, :info]), reports_pdf_scores_path(user_id: @user.id, type: '_not_evaluative', format: "pdf"), :target => "_blank", class: "btn", :'aria-label' => t(:report_not_evaluative, scope: [:scores, :info])

  - if @is_student
    #list_tools
  - else
    #resp_list

  %br
  .block_wrapper
    .block_title
      %h2= t(".history_access", amount: @access_count)
    .block_content.block_content_text
      #history_search_content
        %input{type: "text", id: "from-date", size: "9", :'aria-label'=> t('.date_begin')}
        = t(:to)
        %input{type: "text", id: "until-date", size: "9", :'aria-label'=> t('.date_end')}
        %span= button_tag t(".search"), id: "bt-amount-history-access", class: "btn"
        #amount_found
          %h2=t('.access_info')
      #history-body
        %table.tb_list
          = render partial: "access", locals: {access: @access}

  .block_wrapper
    .block_title
      %h2= t(".public_files")
    .block_content.public_files_info
      - no_files = (@public_files.blank?)
      %table.tb_list
        %thead{style: (no_files ? "display: none" : "")}
          %tr.lines
            %th.no_sort
            %th#file= t(".file")
            %th#size= t(".size")
            %th#sent_on= t(".sent_on")
            %th.no_sort
        %tbody.public_files
          - unless no_files
            - @public_files.each do |file|
              = render partial: "public_files/file", locals: {file: file, destroy: false}
      .text_none.empty_message{class: (no_files ? "" : "hide_message")}= t(:itens_not_found)

  .block_wrapper{style: "float:left"}
    = link_to t(:back), :back, class: "btn"

= javascript_include_tag 'tooltip', 'tablesorter', 'scores', 'academic_allocation_user'

:css
  .ui-datepicker { width: 15em; padding: .2em .2em 0; display: none; }

:javascript

  $(function(){
    var options = $.extend($.datepicker.regional["#{I18n.locale}"]);

    $('#from-date, #until-date').datepicker(options);
    $('#from-date, #until-date').mask("#{I18n.t(:mask, scope: "date.formats")}");

    $("#bt-amount-history-access").click(function(){
      var params = {
        'from-date': $('#from-date').val(),
        'until-date': $('#until-date').val()
      };
      $.get("#{amount_access_scores_path(user_id: @user.id)}", params, function(data){
        $("#history-body table").html(data);
        erase_flash_messages();
        $("#amount_found h2").html($("#history-body tbody:first tr").not('.text_none').length + "#{t(".access_found")}");
        $("#history-body tbody").tablesorter();
      }).error(function(data){
        show_error(data);
      });
    });

    $(".link_pre_exam, .open_exam").call_fancybox({
      minWidth: '50%',
      minheigth: '50%',
      closeBtn : true,
      height: 'auto',
      maxHeight: '70%'
    });

    $(".exam-result").call_fancybox({
      minWidth: '50%',
      minHeight: '50%',
      height: 'auto',
      closeBtn : true
    });


    $('#scores ul.dropdown-menu li input[type="checkbox"]').change(function(){
      if($(this).prop('checked')){
        var params = {
          'tool': $(this).val(),
          'user_id' : "#{@user.id}"
        };

        $.get("#{search_tool_scores_path}", params, function(data) {
          if(!!$('#list_tools').length)
            $('#list_tools').prepend(data);
          else
            $('#resp_list').prepend(data);

          reload_shortcut_list();

        }).error(function(data){
          var data = $.parseJSON(data.responseText);
          if (typeof(data.alert) != "undefined")
            flash_message(data.alert, 'alert');
        });

      }else{
        if(!!$('#list_tools').length)
          $('#list_tools .'+$(this).val()).remove();
        else
          $('#resp_list .'+$(this).val()).remove();
      }

    });

    if(!!$('#resp_list').length){
      $('ul.dropdown-menu li input[type="checkbox"]#chat_room').click();
      $('ul.dropdown-menu li input[type="checkbox"]#webconference').click();
      $('ul.dropdown-menu li input[type="checkbox"]#discussion').click();
    }else{
      $('ul.dropdown-menu li input[type="checkbox"]#all').click();
    }
  });

  function calculate_user_grade_exam(link){
    if ($(link).attr('disabled') == 'disabled'){
      flash_message("#{t('exams.error.cant_calcule_grade')}", 'alert');
      return false;
    }

    $.ajax({
      type: 'put',
      url: $(link).data('url'),
      success: function(data){
        flash_message(data.notice, 'notice');

        if(data.tool != 'undefined')
          after_evaluate(data.tool, data.score_type, data.ac_id, data.user_id, data, data.group_id);

        if(data.show_element != 'undefined')
          $(link).parents('tr').find(data.show_element).parent().removeClass('invisible');
      },
      error: function(data){
        console.log(data);
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
      }
    });
  }
