
%fieldset#allocation_tag_selection
  .filter_type.info_left
    = t(:selected, scope: [:scores, :info]) 
    = select_tag "type", options_for_select(@types), :"data-url-search" => search_tool_scores_path(type: ":type"), multiple: true
  %fieldset.info_right
    - g = AcademicAllocationUser.get_grade_finish(@user.id, @allocation_tag_id).final_grade
    - grade = g.blank? ? ' - ' : g.round(2).to_s
    - wh = AcademicAllocationUser.get_wh_finish(@user.id, @allocation_tag_id)
    = t(:student, scope: [:scores, :info]) + @user.username
    %br
    = t(:grade_i, scope: [:scores, :info]) + grade
    %br
    = t(:frequency_i, scope: [:scores, :info]) + wh.to_s
#list_tools

%br    
.block_wrapper
  .block_title
    %h2= t(".history_access", amount: @access.count)
  .block_content.block_content_text
    #history_search_content
      %input{type: "text", id: "from-date", size: "9"}
      = t(:to)
      %input{type: "text", id: "until-date", size: "9"}
      %span= button_tag t(".search"), id: "bt-amount-history-access", class: "btn"
      #amount_found{style: "float: right; margin-top: 7px;"}
        %h2
    #history-body
      %table.tb_list
        = render partial: "access", locals: {access: @access}

.block_wrapper
  .block_title
    %h2= t(".public_files")
  .block_content
    - no_files = (@public_files.blank?)
    %table.tb_list
      %thead{style: (no_files ? "display: none" : "")}
        %tr.lines
          %th.no_sort
          %th= t(".file")
          %th= t(".size")
          %th= t(".sent_on")
          %th.no_sort
      %tbody.public_files
        - unless no_files
          - @public_files.each do |file|
            = render partial: "public_files/file", locals: {file: file, destroy: false}
    .text_none.empty_message{class: (no_files ? "" : "hide_message")}= t(:itens_not_found)

.block_wrapper{style: "float:left"}
  = link_to t(:back), :back, {class: "btn"}
  

:css
  .ui-datepicker { width: 15em; padding: .2em .2em 0; display: none; }

:javascript

  $(function(){
    
    var options = $.extend($.datepicker.regional["#{I18n.locale}"]);
    $('#from-date, #until-date').datepicker(options);
    $('#from-date, #until-date').mask("#{I18n.t(:mask, scope: "date.formats")}");

    $("#bt-amount-history-access").click(function(){
      var params = {
        'from-date': $('#from-date').val(),
        'until-date': $('#until-date').val()
      };
      $.get("#{amount_access_scores_path(user_id: @user.id)}", params, function(data){
        $("#history-body table").html(data);
        erase_flash_messages();
        $("#amount_found h2").html($("#history-body tbody:first tr").length + "#{t(".access_found")}");
        $("#history-body tbody").tablesorter();
      }).error(function(data){
        show_error(data);
      });
    });

    $("td.show_posts a").call_fancybox();

    $(".link_pre_exam, .open_exam").call_fancybox({
      minWidth: '50%',
      minheigth: '50%',
      closeBtn : true,
      height: 'auto',
      maxHeight: '70%'
    });

    $(".exam-result").call_fancybox({
      minWidth: '50%',
      minHeight: '50%',
      height: 'auto',
      closeBtn : true
    });

    $('#type').click(function(){
      var params = {
        'tool': $("#type").val(),
        'user_id' : "#{@user.id}"
      };
      array_too = $("#type").val();
      ulp = array_too.length
      up= ulp - 1;

      $('.block_wrapper_'.concat(array_too[up])).hide();
      if(ulp==1){
        $('.block_wrapper_all').hide();
        $('.block_wrapper_exam').hide();
        $('.block_wrapper_webconference').hide();
        $('.block_wrapper_assignment').hide();
        $('.block_wrapper_chat').hide();
        $('.block_wrapper_discussion').hide();
        $('.block_wrapper_shedule_event').hide();
      }

      $.get("#{search_tool_scores_path()}", params, function(data) {
        $('#list_tools').prepend(data);       

      }).error(function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
       });
    });

  });

  function calcule_grade_user_exam(link){
    if ($(link).attr('disabled') == 'disabled'){
      flash_message("#{t('exams.error.calcule_grade')}", 'alert');
      return false;
    }
    
    $.put($(link).data('url'), function(data){
      flash_message(data.notice, 'notice');
      var tr = $(link).parents('tr:first');
      $(tr).find('.situation:first').html(data.status);
      $(tr).find('.grade:first').html(data.grade);
    }).error(function(data){
      var response = $.parseJSON(data.responseText);
      if (typeof(response.alert) != "undefined")
       flash_message(response.alert, 'alert');
    });
  }
