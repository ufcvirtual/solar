.assignment
  .block_title
    %h2
      %h2= t(:assignments, :scope => [:scores, :info])
  .block_content    
    #tabs.tab_assignment
      %ul
        %li.active= link_to t(:evaluative, scope: [:scores, :info]), "#evaluative"
        %li= link_to t(:frequency, scope: [:scores, :info]), "#frequency"
        %li= link_to t(:not_evaluative, scope: [:scores, :info]), "#notevaluative"   
          
      #evaluative       
        .block_content
          - unless @assigments_evaluative.blank?
            %table.tb_list
              %thead
                %tr.lines
                  %th{style: "width: 6%;"}= t(:assignments, scope: [:scores, :info])
                  %th.center.date{style: "width: 6%;"}= t(:date_range, scope: [:scores, :info])
                  %th.center{style: "width: 4%;"}= t(:situation, scope: [:scores, :info])
                  %th.center{style: "width: 2%;"}= t(:grade, scope: [:scores, :info])
                  - if @can_evaluate_ass
                    %th.center.no_sort{style: "width: 2%;"}
                  %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
              %tbody
                - @assigments_evaluative.each do |assignment|
                  %tr.lines
                    %td{align: "left"}
                      - if assignment.situation == 'without_group'
                        .title= assignment.name
                      - else
                        = link_to assignment.name, student_assignment_path(assignment.academic_tool_id, student_id: @user.id, group_id: assignment.group_id), {class: 'link_content'}
                      .description
                        .minimun= sanitize(truncate assignment.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                        .complete.invisible
                          = assignment.description
                          = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    %td.center
                      = [l(assignment.start_date.to_date, format: :normal), l(assignment.end_date.to_date, format: :normal)].join(" - ")
                    %td.center{class: "assignment_#{assignment.situation}"}= t(assignment.situation.to_sym)
                    %td.center= assignment.grade
                    - if @can_evaluate_ass
                      %td.center
                        = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: assignment.academic_tool_type, ac_id: assignment.id, user_id: @user.id, group_id: assignment.group_id, situation: assignment.situation, score_type: 'evaluative'), class: 'btn'
                    %td.center=(assignment.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
          - else
            .block_content.block_content_text= t(:itens_not_found)

      #frequency
        .block_content
          - unless @assigments_frequency.blank?
            %table.tb_list
              %thead
                %tr.lines
                  %th{style: "width: 6%;"}= t(:assignments, scope: [:scores, :info])
                  %th.center.date{style: "width: 6%;"}= t(:date_range, scope: [:scores, :info])
                  %th.center{style: "width: 4%;"}= t(:situation, scope: [:scores, :info])
                  %th.center{style: "width: 2%;"}= t(:frequency, scope: [:scores, :info])
                  - if @can_evaluate_ass
                    %th.center.no_sort{style: "width: 2%;"}
                  %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
              %tbody
                - @assigments_frequency.each do |assignment|
                  %tr.lines
                    %td{align: "left"}
                      - if assignment.situation == 'without_group'
                        .title= assignment.name
                      - else
                        = link_to assignment.name, student_assignment_path(assignment.academic_tool_id, student_id: @user.id, group_id: assignment.group_id), {class: 'link_content'}
                      .description
                        .minimun= sanitize(truncate assignment.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                        .complete.invisible
                          = assignment.description
                          = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    %td.center
                      = [l(assignment.start_date.to_date, format: :normal), l(assignment.end_date.to_date, format: :normal)].join(" - ")
                    %td.center{class: "assignment_#{assignment.situation}"}= t(assignment.situation.to_sym)
                    %td.center= assignment.working_hours
                    - if @can_evaluate_ass
                      %td.center
                        = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: assignment.academic_tool_type, ac_id: assignment.id, user_id: @user.id, group_id: assignment.group_id, situation: assignment.situation, score_type: 'evaluative'), class: 'btn'
                    %td.center=(assignment.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
          - else
            .block_content.block_content_text= t(:itens_not_found)
    
      #notevaluative 
        .block_content
          - unless @assigments_not_evaluative.blank?
            %table.tb_list
              %thead
                %tr.lines
                  %th{style: "width: 6%;"}= t(:assignments, scope: [:scores, :info])
                  %th.center.date{style: "width: 6%;"}= t(:date_range, scope: [:scores, :info])
                  %th.center{style: "width: 4%;"}= t(:situation, scope: [:scores, :info])
                  %th.center{style: "width: 2%;"}= t(:grade, scope: [:scores, :info])
                  - if @can_evaluate_ass
                    %th.center.no_sort{style: "width: 2%;"}
                  %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
        
              %tbody
                - @assigments_not_evaluative.each do |assignment|
                  %tr.lines
                    %td{align: "left"}
                      - if assignment.situation == 'without_group'
                        .title= assignment.name
                      - else
                        = link_to assignment.name, student_assignment_path(assignment.academic_tool_id, student_id: @user.id, group_id: assignment.group_id), {class: 'link_content'}
                      .description
                        .minimun= sanitize(truncate assignment.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                        .complete.invisible
                          = assignment.description
                          = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    %td.center
                      = [l(assignment.start_date.to_date, format: :normal), l(assignment.end_date.to_date, format: :normal)].join(" - ")
                    %td.center{class: "assignment_#{assignment.situation}"}= t(assignment.situation.to_sym)
                    %td.center= assignment.grade
                    - if @can_evaluate_ass
                      %td.center
                        = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: assignment.academic_tool_type, ac_id: assignment.id, user_id: @user.id, group_id: assignment.group_id, situation: assignment.situation, score_type: 'evaluative'), class: 'btn'
                    %td.center=(assignment.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
                
          - else
            .block_content.block_content_text= t(:itens_not_found)          

= javascript_include_tag 'tablesorter', 'tooltip', 'scores'

:javascript

  $(function(){
    $(".tab_assignment").tabs();
  }); 