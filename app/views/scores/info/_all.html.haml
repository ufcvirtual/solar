.all
  .block_title
    %h2= t(:all, :scope => [:scores, :info])
  .block_content
    #tabs.tabs_all
      %ul
        %li.active= link_to t(:evaluative, scope: [:scores, :info]), "#evaluative"
        %li= link_to t(:frequency, scope: [:scores, :info]), "#frequency"
        %li= link_to t(:not_evaluative, scope: [:scores, :info]), "#notevaluative"  

      #evaluative    
        - unless @tool_evaluative.empty?
          - is_user = (@user.id == current_user.id)
          %table.tb_list
            %thead
              %tr.lines
                %th{style: "width: 20%;"}= t(:tool, scope: [:scores, :info])
                %th{style: "width: 40%;"}= t(:title, scope: [:scores, :info])
                %th.center.date{style: "width: 25%;"}= t(:date_range, scope: [:scores, :info])
                %th.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
                %th.center{style: "width: 2%;"}= t(:interactions, scope: [:scores, :info])
                %th.center{style: "width: 20%;"}= t(:grade, scope: [:scores, :info])
                %th.no_sort
                %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
            %tbody
              - @tool_evaluative.each do |tool|
                - available = tool.academic_tool_type != 'Webconference' || !exist_and_offline?(tool.server.to_i)
                %tr.lines
                  %td
                    = t(tool.academic_tool_type.downcase, scope: [:activerecord, :models])
                  %td
                    - if tool.opened == 't' && tool.academic_tool_type != 'ScheduleEvent' && tool.situation != 'finished' &&  available
                      = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                    - else
                      - if tool.academic_tool_type == 'Exam'
                        - if is_user
                          .title= tool.name
                        - elsif !@can_open 
                          = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                      - else 
                        .title= tool.name
                    .equivalent
                      - unless tool.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{tool.academic_tool_type}_#{tool.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_1_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: tool.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => equalities_tools_path(tool_type: tool.academic_tool_type, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_1_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                    - if tool.academic_tool_type == 'ChatRoom' && tool.type_tool == '1'
                      .participants.equivalent
                        %a{ href: '#', :"data-dropdown" => "#dropdown_p_1_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => participants_chat_room_path(tool.academic_tool_id, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-users
                          =t('scores.info.participants')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_p_1_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }  
                  %td.center
                    - if tool.academic_tool_type.downcase == 'webconference'
                      %div= l(tool.start_hour.to_datetime, format: :at_date)
                    - else
                      %div= [l(tool.start_date.to_date), l(tool.end_date.to_date)].join(' - ')
                      %div= [(tool.start_hour), (tool.end_hour)].join(' - ') unless tool.start_hour.blank?
                  %td.center
                    %div{class: "assignment_#{(available ? tool.situation : 'not_started')}"}= (available ? t(tool.situation, :scope => [:scores, :situation]) : t(:unavailable, scope: [:webconferences, :list])) unless tool.situation.blank?
                  %td.center
                    - unless tool.count.blank?
                      = link_to_function tool.count, 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'evaluative')
                  %td.center
                    = tool.grade.blank? ? ' - ' : tool.grade.to_f
                  %td
                    - if (tool.academic_tool_type != 'Exam' && @can_evaluate.include?(tool.academic_tool_type.to_s.tableize.to_sym => :evaluate)) || @can_evaluate.include?(tool.academic_tool_type.to_s.tableize => :calcule_grades)
                      = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'evaluative'), class: 'btn'
                  %td.center=(tool.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
        - else
          .block_content.block_content_text= t(:itens_not_found)

      #frequency
        - unless  @tool_frequency.empty?
          - is_user = (@user.id == current_user.id)
          %table.tb_list
            %thead
              %tr.lines
                %th{style: "width: 20%;"}= t(:tool, scope: [:scores, :info])
                %th{style: "width: 37%;"}= t(:title, scope: [:scores, :info])
                %th.center.date{style: "width: 25%;"}= t(:date_range, scope: [:scores, :info])
                %th.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
                %th.center{style: "width: 2%;"}= t(:interactions, scope: [:scores, :info])
                %th.center{style: "width: 20%;"}= t(:frequency, scope: [:scores, :info])
                %th.no_sort
                %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
            %tbody
              -  @tool_frequency.each do |tool|
                - available = tool.academic_tool_type != 'Webconference' || !exist_and_offline?(tool.server.to_i)
                %tr.lines
                  %td
                    = t(tool.academic_tool_type.downcase, scope: [:activerecord, :models])
                  %td
                    - if tool.opened == 't' && tool.academic_tool_type != 'ScheduleEvent' && available
                      = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                    - else
                      - if tool.academic_tool_type == 'Exam'
                        - if is_user
                          .title= tool.name
                        - elsif !@can_open 
                          = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                      - else 
                        .title= tool.name
                      
                    .equivalent
                      - unless tool.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{tool.academic_tool_type}_#{tool.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_2_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: tool.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => equalities_tools_path(tool_type: tool.academic_tool_type, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_2_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                    - if tool.academic_tool_type == 'ChatRoom' && tool.type_tool == '1'
                      .participants.equivalent
                        %a{ href: '#', :"data-dropdown" => "#dropdown_p_2_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => participants_chat_room_path(tool.academic_tool_id, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-users
                          =t('scores.info.participants')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_p_2_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                  %td.center
                    - if tool.academic_tool_type.downcase == 'webconference'
                      %div= l(tool.start_hour.to_datetime, format: :at_date)
                    - else
                      %div= [l(tool.start_date.to_date), l(tool.end_date.to_date)].join(' - ')
                      %div= [(tool.start_hour), (tool.end_hour)].join(' - ') unless tool.start_hour.blank?
                  %td.center
                    %div{class: "assignment_#{(available ? tool.situation : 'not_started')}"}= (available ? t(tool.situation, :scope => [:scores, :situation]) : t(:unavailable, scope: [:webconferences, :list])) unless tool.situation.blank?
                  %td.center
                    - unless tool.count.blank?
                      = link_to_function tool.count, 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'frequency')
                  %td.center
                    = tool.working_hours.blank? ? ' - ' : tool.working_hours.to_i
                  %td
                    - if (tool.academic_tool_type != 'Exam' && @can_evaluate.include?(tool.academic_tool_type.to_s.tableize.to_sym => :evaluate)) || @can_evaluate.include?(tool.academic_tool_type.to_s.tableize => :calcule_grades)
                      = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'evaluative'), class: 'btn'
                  %td.center=(tool.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
        - else
          .block_content.block_content_text= t(:itens_not_found)

      #notevaluative
        - unless @tool_not_evaluative.empty?
          - is_user = (@user.id == current_user.id)
          %table.tb_list
            %thead
              %tr.lines
                %th{style: "width: 20%;"}= t(:tool, scope: [:scores, :info])
                %th{style: "width: 35%;"}= t(:title, scope: [:scores, :info])
                %th.center.date{style: "width: 25%;"}= t(:date_range, scope: [:scores, :info])
                %th.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
                %th.center{style: "width: 2%;"}= t(:interactions, scope: [:scores, :info])
                %th.no_sort
            %tbody
              -  @tool_not_evaluative.each do |tool|
                - available = tool.academic_tool_type != 'Webconference' || !exist_and_offline?(tool.server.to_i)
                %tr.lines
                  %td
                    = t(tool.academic_tool_type.downcase, scope: [:activerecord, :models])
                  %td
                    - if tool.opened == 't' && tool.academic_tool_type != 'ScheduleEvent' && available
                      = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                    - else
                      - if tool.academic_tool_type == 'Exam'
                        - if is_user
                          .title= tool.name
                        - elsif !@can_open 
                          = link_to_function tool.name, 'open_tool(this)', :'data-url' => redirect_to_open_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation)
                      - else 
                        .title= tool.name
                    .equivalent
                      - unless tool.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{tool.academic_tool_type}_#{tool.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_3_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: tool.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => equalities_tools_path(tool_type: tool.academic_tool_type, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_3_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }
                    - if tool.academic_tool_type == 'ChatRoom' && tool.type_tool == '1'
                      .participants.equivalent
                        %a{ href: '#', :"data-dropdown" => "#dropdown_p_3_#{tool.academic_tool_type}_#{tool.id}", :'data-url' => participants_chat_room_path(tool.academic_tool_id, ac_id: tool.id), onclick: 'open_dropdown(this);' }
                          %i.icon-users
                          =t('scores.info.participants')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_p_3_#{tool.academic_tool_type}_#{tool.id}"}
                          %ul{ class: 'dropdown-menu' }  
                  %td.center
                    - if tool.academic_tool_type.downcase == 'webconference'
                      %div= l(tool.start_hour.to_datetime, format: :at_date)
                    - else
                      %div= [l(tool.start_date.to_date), l(tool.end_date.to_date)].join(' - ')
                      %div= [(tool.start_hour), (tool.end_hour)].join(' - ') unless tool.start_hour.blank?
                  %td.center
                    %div{class: "assignment_#{(available ? tool.situation : 'not_started')}"}= (available ? t(tool.situation, :scope => [:scores, :situation]) : t(:unavailable, scope: [:webconferences, :list])) unless tool.situation.blank?
                  %td.center
                    - unless tool.count.blank?
                      = link_to_function tool.count, 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'evaluative')
                  %td
                    - if ['Assignment', 'Exam'].include?(tool.academic_tool_type) && ((tool.academic_tool_type != 'Exam' && @can_evaluate.include?(tool.academic_tool_type.to_s.tableize.to_sym => :evaluate)) || @can_evaluate.include?(tool.academic_tool_type.to_s.tableize => :calcule_grades))
                      = link_to_function content_tag(:i, nil, class: 'icon-write'), 'open_evaluation(this)', :'data-url' => redirect_to_evaluate_scores_path(tool_type: tool.academic_tool_type, ac_id: tool.id, user_id: @user.id, group_id: tool.group_id, situation: tool.situation, score_type: 'evaluative'), class: 'btn'
                          
        - else
          .block_content.block_content_text= t(:itens_not_found)
       

= javascript_include_tag 'tablesorter', 'tooltip', 'scores'

:javascript

  $(function(){
    $(".tabs_all").tabs();
  });