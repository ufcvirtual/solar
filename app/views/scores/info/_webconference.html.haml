.webconference
  .block_title
    %h2= t(:webconference, :scope => [:scores, :info])
  .block_content
    #tabs.tab_web
      %ul
        %li.active 
          = link_to t(:evaluative, scope: [:scores, :info]), "#evaluative"
        %li 
          = link_to t(:frequency, scope: [:scores, :info]), "#frequency"
        %li 
          = link_to t(:not_evaluative, scope: [:scores, :info]), "#notevaluative"

      #evaluative
        - unless @webconferences_evaluative.blank?
          %table.webconferences.tb_list
            %thead
              %tr.lines
                %th.default_width.center= t(:name, scope: [:webconferences, :list])
                %th.default_width.center= t(:availability, scope: [:webconferences, :list])
                %th.smaller_width.center= t(:situation, scope: [:scores, :info])
                - if @is_student
                  %th.center{style: "width: 2%;"}= t(:grade, :scope => [:scores, :info])
                %th.smaller_width.center.no_sort= t(:recording, scope: [:webconferences, :index])
                - if @can_see_access || @can_evaluate
                  %th.smaller_width.center.no_sort{style: "width: 2%;"}
                - if @is_student
                  %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
            %tbody
              - @webconferences_evaluative.each do |webconference|
                %tr.lines
                  %td.webconference_access.title{ :'data-url' => access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id) }
                    - if (webconference.opened == 't' && webconference.closed == 'f') 
                      = link_to_function(webconference.name, 'access_webconference(this)') 
                    - else
                      .title= webconference.name
                    .description
                      .minimun= sanitize(truncate webconference.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                      .complete.invisible
                        = webconference.description
                        = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    .equivalent
                      - unless webconference.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{webconference.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_1_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: webconference.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{webconference.id}", :'data-url' => equalities_tools_path(tool_type: webconference.academic_tool_type, ac_id: webconference.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_1_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                  %td.center
                    %div= l(webconference.start_date.to_date, format: :normal)
                    %div= [l(webconference.start_hour.to_time, format: :today), l(webconference.end_hour.to_time, format: :today)].join(' - ')
                  - webconference.choose_server if webconference.server.blank?
                  %td.center{class: (@online[webconference.server] ? "assignment_#{webconference.situation}" : 'assignment_not_started')}= @online[webconference.server] ? t("scores.situation.#{webconference.situation}") : t(:unavailable, scope: [:webconferences, :list])
                  - if @is_student
                    %td.center= webconference.grade
                  %td.center{ class: "#{webconference.situation == 'finish' ? '' : 'disabled'}", :'data-tooltip' => t('webconferences.list.watch')}= link_to content_tag(:i, nil, class: 'icon-play btn'), get_record_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id), class: 'record'
                  - if @can_see_access || @can_evaluate
                    %td.center{ :'data-url' => list_access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id, user_id: @user.id), :'data-tooltip' => t(:to_evaluate, scope: [:posts, :post]) }= link_to_function content_tag(:i, nil, class: "icon-#{@can_evaluate && @is_student ? 'write' : 'users'} btn"), 'list_access(this)'
                  - if @is_student
                    %td.center=(webconference.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
                    
        - else
          .block_content.block_content_text= t(:no_data, scope: [:webconferences, :list])

      #frequency
        - unless @webconferences_frequency.blank?
          %table.webconferences.tb_list
            %thead
              %tr.lines
                %th.default_width.center= t(:name, scope: [:webconferences, :list])
                %th.default_width.center= t(:availability, scope: [:webconferences, :list])
                %th.smaller_width.center= t(:situation, scope: [:webconferences, :list])
                - if @is_student
                  %th.center{style: "width: 2%;"}= t(:frequency, :scope => [:scores, :info])
                %th.smaller_width.center.no_sort= t(:recording, scope: [:webconferences, :index])
                - if @can_see_access || @can_evaluate
                  %th.smaller_width.center.no_sort{style: "width: 2%;"}
                - if @is_student
                  %th.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
            %tbody
              - @webconferences_frequency.each do |webconference|
                %tr.lines
                  %td.webconference_access{ :'data-url' => access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id) }
                    - if (webconference.opened == 't' && webconference.closed == 'f') 
                      = link_to_function(webconference.name, 'access_webconference(this)') 
                    - else
                      .title= webconference.name
                    .description
                      .minimun= sanitize(truncate webconference.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                      .complete.invisible
                        = webconference.description
                        = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    .equivalent
                      - unless webconference.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{webconference.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_2_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: webconference.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{webconference.id}", :'data-url' => equalities_tools_path(tool_type: webconference.academic_tool_type, ac_id: webconference.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_2_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                  %td.center
                    %div= l(webconference.start_date.to_date, format: :normal)
                    %div= [l(webconference.start_hour.to_time, format: :today), l(webconference.end_hour.to_time, format: :today)].join(' - ')
                  - webconference.choose_server if webconference.server.blank?
                  %td.center{class: (@online[webconference.server] ? "assignment_#{webconference.situation}" : 'assignment_not_started')}= @online[webconference.server] ? t("scores.situation.#{webconference.situation}") : t(:unavailable, scope: [:webconferences, :list])
                  - if @is_student
                    %td.center= webconference.working_hours
                  %td.center{ class: "#{webconference.situation == 'finish' ? '' : 'disabled'}", :'data-tooltip' => t('webconferences.list.watch')}= link_to content_tag(:i, nil, class: 'icon-play btn'), get_record_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id), class: 'record'
                  - if @can_see_access || @can_evaluate
                    %td.center{ :'data-url' => list_access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id, user_id: @user.id), :'data-tooltip' => t(:to_evaluate, scope: [:posts, :post]) }= link_to_function content_tag(:i, nil, class: "icon-#{@can_evaluate && @is_student ? 'write' : 'users'} btn"), 'list_access(this)'
                  - if @is_student
                    %td.center=(webconference.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
                    
        - else
          .block_content.block_content_text= t(:no_data, scope: [:webconferences, :list])
      
      #notevaluative 
        - unless @webconferences_not_evaluative.blank?
          %table.webconferences.tb_list
            %thead
              %tr.lines
                %th.default_width.center= t(:name, scope: [:webconferences, :list])
                %th.default_width.center= t(:availability, scope: [:webconferences, :list])
                %th.smaller_width.center= t(:status, scope: [:webconferences, :list])
                %th.smaller_width.center.no_sort= t(:recording, scope: [:webconferences, :index])
                - if @can_see_access
                  %th.center.no_sort{style: 'width: 2%;'}= t('webconferences.index.access')
            %tbody
              - @webconferences_not_evaluative.each do |webconference|
                %tr.lines
                  %td.webconference_access{ :'data-url' => access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id) }
                    - if (webconference.opened == 't' && webconference.closed == 'f') 
                      = link_to_function(webconference.name, 'access_webconference(this)') 
                    - else
                      .title= webconference.name
                    .description
                      .minimun= sanitize(truncate webconference.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                      .complete.invisible
                        = webconference.description
                        = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
                    .equivalent
                      - unless webconference.eq_name.blank?
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{webconference.id}" }
                          %i.icon-flow-parallel
                          = t('scores.info.equivalency')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_3_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                            = raw t('scores.info.equivalent', name: webconference.eq_name)
                      - else
                        %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{webconference.id}", :'data-url' => equalities_tools_path(tool_type: webconference.academic_tool_type, ac_id: webconference.id), onclick: 'open_dropdown(this);' }
                          %i.icon-flow-parallel
                          =t('scores.info.equalities')
                          %i.icon-arrow-down-triangle
                        .dropdown.dropdown-tip{id: "dropdown_eq_3_#{webconference.id}"}
                          %ul{ class: 'dropdown-menu' }
                  %td.center
                    %div= l(webconference.start_date.to_date, format: :normal)
                    %div= [l(webconference.start_hour.to_time, format: :today), l(webconference.end_hour.to_time, format: :today)].join(' - ')
                  - webconference.choose_server if webconference.server.blank?
                  %td.center{class: (@online[webconference.server] ? "assignment_#{webconference.situation}" : 'assignment_not_started')}= @online[webconference.server] ? t("scores.situation.#{webconference.situation}") : t(:unavailable, scope: [:webconferences, :list])
                  %td.center{ class: "#{webconference.situation == 'finish' ? '' : 'disabled'}", :'data-tooltip' => t('webconferences.list.watch')}= link_to content_tag(:i, nil, class: 'icon-play btn'), get_record_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id), class: 'record'
                  - if @can_see_access
                    %td.center{ :'data-url' => list_access_webconference_path(webconference.academic_tool_id, at_id: webconference.allocation_tag_id, user_id: @user.id), :'data-tooltip' => t(:to_evaluate, scope: [:posts, :post]) }= link_to_function content_tag(:i, nil, class: "icon-users btn"), 'list_access(this)'
                  
        - else
          .block_content.block_content_text= t(:no_data, scope: [:webconferences, :list])    

= javascript_include_tag 'tooltip', 'webconferences', 'tablesorter', 'scores'

:javascript
  $(function(){
    $(".tab_web").tabs();
    $('.record').call_fancybox();
  });