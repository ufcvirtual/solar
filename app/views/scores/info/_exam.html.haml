%section.exam
  .block_title
    %h2= t(:exam, :scope => [:scores, :info])
    = render partial: 'scores/info/tabs', locals: {tool: 'exam'}

  .block_content
    .tools.show.evaluative#evaluative_exam
      - unless @exams_evaluative.empty?
        - is_user = (@user.id == current_user.id)
        %table.tb_list.list_exams{:summary=> t("exams.list.summary_evaluative")}
          %thead
            %tr.lines
              %th#ex_eva_exa_evaluative{style: "width: 30%;"}= t(:exam, :scope => [:scores, :info])
              %th#ex_eva_dat_evaluative.center.date{style: "width: 30%;"}= t(:date_range, :scope => [:scores, :info])
              %th#ex_eva_sit_evaluative.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
              %th#ex_eva_gra_evaluative.center{style: "width: 2%;"}= t(:grade, :scope => [:scores, :info])
              %th#ex_eva_btn_evaluative.center.no_sort{style: "width: 2%;"}= t('exams.list.calculate')
              %th#ex_eva_af.center.no_sort{style: "width: 2%;"}=t('scores.info.final_exam')
          %tbody
            - @exams_evaluative.each do |exam|
              %tr.lines
                %td{align: "left", headers: "ex_eva_exa_evaluative"}
                  - if !['to_answer', 'not_finished', 'retake'].include?(exam.situation)
                    - if is_user
                      .title= link_to exam.name, '#', disabled: true, :'aria-label' => exam.name +  t(:disabled), class: 'disabled'
                    - elsif !@can_open
                      = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam', :'aria-label' => exam.name + t('fancybox.open')
                      %br
                    - if exam.closed == 't' || exam.situation == 'corrected'
                      = link_to I18n.t('exams.index.result'), result_user_exam_path(exam.academic_tool_id, user_id: @user.id), class: 'link_content', class: 'exam-result'
                      - if is_user && exam.situation == 'corrected'
                        |
                        = link_to I18n.t(:mirror_results, :scope => [:exams, :index]), open_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), class: 'open_exam', :'aria-label' => t('.mirror_results_alt', exam: exam.name) + t('fancybox.open')
                  - elsif is_user
                    = link_to exam.name, pre_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), :'data-tooltip' => exam.name, class: 'link_content link_pre_exam', :'aria-label' => exam.name + t('fancybox.open')
                  - else
                    = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam'

                  .description
                    - if exam.description.size > 80
                      .description_slice= raw exam.description.slice(0..80) << "..."
                      .description_complete= raw exam.description
                      .more_or_less
                        %a.description_more.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.more_alt', tool: exam.name) }= t('common_between_pages.more')
                        %a.description_less.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.less_alt', tool: exam.name)}= t('common_between_pages.less')
                    - else
                      = raw exam.description
                  .equivalent
                    - unless exam.eq_name.blank?
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{exam.id}", onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name}
                        %i.icon-flow-parallel
                        = t('scores.info.equivalency')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_1_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                          = raw t('scores.info.equivalent', name: exam.eq_name)
                    - else
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_1_#{exam.id}", :'data-url' => equalities_tools_path(tool_type: exam.academic_tool_type, ac_id: exam.id), onclick: 'open_dropdown(this);', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name }
                        %i.icon-flow-parallel
                        =t('scores.info.equalities')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_1_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                %td.center{headers: "ex_eva_dat_evaluative"}
                  %div= [l(exam.start_date.to_date), l(exam.end_date.to_date)].join(' - ')
                  %div= [(exam.start_hour), (exam.end_hour)].compact.join(' - ')
                %td.center.situation{headers: "ex_eva_sit_evaluative"}
                  %div{class: "#{exam.situation} #{['exam','u', exam.id.to_s, @user.id.to_s].join('_')} situation"}= I18n.t(exam.situation, scope: [:scores, :situation], count: exam.count, count_all: exam.count_all)
                  = render partial: 'exams/result_release', locals: {exam: exam, id: 'ex_eva_'}
                %td.center.grade{headers: "ex_eva_gra_evaluative"}= exam.grade
                %td{headers: "ex_eva_btn_evaluative"}
                  - disabled = !(exam.grade.blank? && exam.closed == 't' && !['to_answer', 'not_finished', 'retake', 'not_answered'].include?(exam.situation))
                  %span.activity_grade= link_to_function (content_tag(:i, nil, class: 'icon-write')), 'calculate_user_grade_exam(this)', :"data-tooltip" => t('exams.index.calculate'), :'data-url' => calculate_user_grade_exam_path(exam.academic_tool_id, user_id: @user.id), class: "btn #{disabled ? 'disabled' : ''}", disabled: disabled, onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('exams.index.calculate') + t(:of) + exam.name
                %td.center{headers: 'ex_eva_af' }=raw t(exam.final_exam, scope: [:common_between_pages, :final_exam])
                / %td.center=(exam.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
      - else
        .block_content.block_content_text= t(:itens_not_found)

    .tools.frequency#frequency_exam
      - unless @exams_frequency.empty?
        - is_user = (@user.id == current_user.id)
        %table.tb_list.list_exams{:summary=> t("exams.list.summary_frequency")}
          %thead
            %tr.lines
              %th#ex_eva_exa_frequency{style: "width: 30%;"}= t(:exam, :scope => [:scores, :info])
              %th#ex_eva_dat_frequency.center.date{style: "width: 30%;"}= t(:date_range, :scope => [:scores, :info])
              %th#ex_eva_sit_frequency.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
              %th#ex_eva_gra_frequency.center{style: "width: 2%;"}= t(:grade, :scope => [:scores, :info])
              %th#ex_eva_wh_frequency.center{style: "width: 2%;"}= t(:workload, :scope => [:scores, :info])
              %th#ex_eva_btn_frequency.center.no_sort{style: "width: 2%;"}= t('exams.list.calculate')
              %th#ex_freq_hours.center.no_sort{style: "width: 2%;"}=t('scores.info.hours')
              %th#ex_eva_aft_frequency.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
          %tbody
            - @exams_frequency.each do |exam|
              %tr.lines
                %td{align: "left", headers: "ex_eva_exa_frequency"}
                  - if !['to_answer', 'not_finished', 'retake'].include?(exam.situation)
                    - if is_user
                      .title= link_to exam.name, '#', disabled: true, :'aria-label' => exam.name +  t(:disabled), class: 'disabled'
                    - elsif !@can_open
                      = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam', :'aria-label' => exam.name + t('fancybox.open')
                      %br
                    - if exam.closed == 't' || exam.situation == 'corrected'
                      = link_to t(:result, :scope => [:exams, :index]), result_user_exam_path(exam.academic_tool_id, user_id: @user.id), class: 'link_content', class: 'exam-result', :'aria-label' => exam.name + t('exams.index.result') + t('fancybox.open')
                      - if is_user && exam.situation == 'corrected'
                        |
                        = link_to t(:mirror_results, :scope => [:exams, :index]), open_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), class: 'open_exam', :'aria-label' => exam.name + t('exams.index.mirror_results') + t('fancybox.open')
                  - elsif is_user
                    = link_to exam.name, pre_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), :'data-tooltip' => exam.name, class: 'link_content link_pre_exam', :'aria-label' => exam.name + t('fancybox.open')
                  - else
                    = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam', :'aria-label' => exam.name + t('fancybox.open')
                  .description
                    - if exam.description.size > 80
                      .description_slice= raw exam.description.slice(0..80) << "..."
                      .description_complete= raw exam.description
                      .more_or_less
                        %a.description_more.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.more_alt', tool: exam.name) }= t('common_between_pages.more')
                        %a.description_less.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.less_alt', tool: exam.name)}= t('common_between_pages.less')
                    - else
                      = raw exam.description
                  .equivalent
                    - unless exam.eq_name.blank?
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{exam.id}", onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name }
                        %i.icon-flow-parallel
                        = t('scores.info.equivalency')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_2_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                          = raw t('scores.info.equivalent', name: exam.eq_name)
                    - else
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_2_#{exam.id}", :'data-url' => equalities_tools_path(tool_type: exam.academic_tool_type, ac_id: exam.id), onclick: 'open_dropdown(this);', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name }
                        %i.icon-flow-parallel
                        =t('scores.info.equalities')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_2_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                %td.center{headers: "ex_eva_dat_frequency"}
                  %div= [l(exam.start_date.to_date), l(exam.end_date.to_date)].join(' - ')
                  %div= [(exam.start_hour), (exam.end_hour)].compact.join(' - ')
                %td.center.situation{headers: "ex_eva_sit_frequency"}
                  %div{class: "#{exam.situation} #{['exam','u', exam.id.to_s, @user.id.to_s].join('_')} situation"}= I18n.t(exam.situation, scope: [:scores, :situation], count: exam.count, count_all: exam.count_all)
                  = render partial: 'exams/result_release', locals: {exam: exam, id: 'ex_freq_'}
                %td.center.grade{headers: "ex_eva_gra_frequency"}= exam.grade
                %td.center.wh{headers: "ex_eva_wh_frequency"}= exam.working_hours
                %td.center{headers: "ex_eva_btn_frequency"}
                  - disabled = !(exam.grade.blank? && exam.closed == 't' && !['to_answer', 'not_finished', 'retake'].include?(exam.situation))
                  %span.activity_grade= link_to_function (content_tag(:i, nil, class: 'icon-write', :'aria-hidden' => 'true')), 'calculate_user_grade_exam(this)', :"data-tooltip" => t('exams.index.calculate'), :'data-url' => calculate_user_grade_exam_path(exam.academic_tool_id, user_id: @user.id), class: "btn #{disabled ? 'disabled' : ''}", disabled: disabled, onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('exams.index.calculate') + t(:of) + exam.name
                %td.center{headers:'ex_freq_hours'}=raw t('common_between_pages.hours', hours: exam.max_working_hours)
                %td.center{headers: "ex_eva_aft_frequency"}=(exam.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
      - else
        .block_content.block_content_text= t(:itens_not_found)

    .tools.notevaluative#notevaluative_exam
      - unless @exams_not_evaluative.empty?
        - is_user = (@user.id == current_user.id)
        %table.tb_list.list_exams{:summary=> t("exams.list.summary_notevaluative")}
          %thead
            %tr.lines
              %th#ex_not_exa{align: "left"}= t(:exam, :scope => [:scores, :info])
              %th#ex_not_dat.center.date{style: "width: 40%;"}= t(:date_range, :scope => [:scores, :info])
              %th#ex_not_sit.center{style: "width: 20%;"}= t(:situation, :scope => [:scores, :info])
              %th#ex_not_gra.center{style: "width: 2%;"}= t(:grade, :scope => [:scores, :info])
              %th#ex_not_bla.center.no_sort{style: "width: 2%;"}=t('exams.list.calculate')
              %th#ex_not_aft.center.no_sort{style: "width: 2%;"}=t('scores.info.new_after_evaluation')
          %tbody
            - @exams_not_evaluative.each do |exam|
              %tr.lines
                %td{align: "left", headers: "ex_not_exa"}
                  - if !['to_answer', 'not_finished', 'retake'].include?(exam.situation)
                    - if is_user
                      .title= link_to exam.name, '#', disabled: true, :'aria-label' => exam.name +  t(:disabled), class: 'disabled'
                    - elsif !@can_open
                      = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam', :'aria-label' => exam.name + t('fancybox.open')
                      %br
                    - if exam.closed == 't' || exam.situation == 'corrected'
                      = link_to t(:result, :scope => [:exams, :index]), result_user_exam_path(exam.academic_tool_id, user_id: @user.id), class: 'link_content', class: 'exam-result', :'aria-label' => exam.name + t('exams.index.result') + t('fancybox.open')
                      - if is_user && exam.situation == 'corrected'
                        |
                        = link_to t(:mirror_results, :scope => [:exams, :index]), open_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), class: 'open_exam', :'aria-label' => exam.name + t('exams.index.mirror_results') + t('fancybox.open')
                  - elsif is_user
                    = link_to exam.name, pre_exam_path(exam.academic_tool_id, allocation_tag_id: @allocation_tag_id, situation: exam.situation), :'data-tooltip' => exam.name, class: 'link_content link_pre_exam', :'aria-label' => exam.name + t('fancybox.open')
                  - else
                    = link_to exam.name, preview_exam_path(exam.academic_tool_id, allocation_tags_ids: @allocation_tag_id), class: 'link_preview_exam', :'aria-label' => exam.name + t('fancybox.open')
                  .description
                    - if exam.description.size > 80
                      .description_slice= raw exam.description.slice(0..80) << "..."
                      .description_complete= raw exam.description
                      .more_or_less
                        %a.description_more.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.more_alt', tool: exam.name) }= t('common_between_pages.more')
                        %a.description_less.link_content{ href: '#', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('common_between_pages.less_alt', tool: exam.name)}= t('common_between_pages.less')
                    - else
                      = raw exam.description
                  .equivalent
                    - unless exam.eq_name.blank?
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{exam.id}", onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name }
                        %i.icon-flow-parallel
                        = t('scores.info.equivalency')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_3_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                          = raw t('scores.info.equivalent', name: exam.eq_name)
                    - else
                      %a{ href: '#', :"data-dropdown" => "#dropdown_eq_3_#{exam.id}", :'data-url' => equalities_tools_path(tool_type: exam.academic_tool_type, ac_id: exam.id), onclick: 'open_dropdown(this);', onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('scores.info.equalities') + t(:of) + exam.name }
                        %i.icon-flow-parallel
                        =t('scores.info.equalities')
                        %i.icon-arrow-down-triangle
                      .dropdown.dropdown-tip{id: "dropdown_eq_3_#{exam.id}"}
                        %ul{ class: 'dropdown-menu' }
                %td.center{headers: "ex_not_dat"}
                  %div= [l(exam.start_date.to_date), l(exam.end_date.to_date)].join(' - ')
                  %div= [(exam.start_hour), (exam.end_hour)].compact.join(' - ')
                %td.center.situation{headers: "ex_not_sit"}
                  %div{class: "#{exam.situation} #{['exam','u', exam.id.to_s, @user.id.to_s].join('_')} situation"}= I18n.t(exam.situation, scope: [:scores, :situation], count: exam.count, count_all: exam.count_all)
                  = render partial: 'exams/result_release', locals: {exam: exam, id: 'ex_not_'}
                %td.center{headers: "ex_not_gra"}=exam.grade
                %td.center.grade{headers: "ex_not_bla"}
                  - disabled = !(exam.grade.blank? && exam.closed == 't' && !['to_answer', 'not_finished', 'retake', 'not_answered'].include?(exam.situation))
                  %span.activity_grade= link_to_function (content_tag(:i, nil, class: 'icon-write', :'aria-hidden' => 'true')), 'calculate_user_grade_exam(this)', :"data-tooltip" => t('exams.index.calculate'), :'data-url' => calculate_user_grade_exam_path(exam.academic_tool_id, user_id: @user.id), class: "btn #{disabled ? 'disabled' : ''}", disabled: disabled, onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t('exams.index.calculate') + t(:of) + exam.name
                %td.center{headers: "ex_not_aft"}=(exam.new_after_evaluation == 't' ? t('scores.info.new_yes') : t('scores.info.new_no'))
      - else
        .block_content.block_content_text= t(:itens_not_found)

= javascript_include_tag 'tablesorter', 'tooltip', 'scores'

:javascript

  $(function(){
    $(".link_pre_exam, .open_exam, .link_preview_exam").call_fancybox({
      minWidth: '50%',
      minheigth: '50%',
      closeBtn : true,
      height: 'auto',
      maxHeight: '70%'
    });

    $(".exam-result").call_fancybox({
      minWidth: '50%',
      minHeight: '50%',
      height: 'auto',
      closeBtn : true
    });
  });
