- show_fields = [Presential_Meeting, Presential_Test, WebConferenceLesson].include?(@schedule_event.type_event)
.user_schedule_event
  %h1#lightBoxDialogTitle= t(".title", user: @user.name, type: @schedule_event.type_name, event: @schedule_event.title)
  %table.tb_list
    %thead
      %tr.lines
        %th= t(".description")
        %th.center= t(".date")
        - unless @schedule_event.start_hour.blank?
          %th.center= t(".time")
        -if show_fields
          %th= t(".place")
    %tbody
      %tr.lines
        %td= @schedule_event.description
        %td.center= [l(@schedule_event.schedule.start_date.to_date, format: :datepicker), l(@schedule_event.schedule.end_date.to_date, format: :datepicker)].join(' - ')
        - unless @schedule_event.start_hour.blank?
          %td= [@schedule_event.start_hour, @schedule_event.end_hour].join(t(".to"))
        - if show_fields
          %td= @schedule_event.place

  - if @ac.evaluative || @ac.frequency
    = simple_form_for :academic_allocation_user, url: evaluate_schedule_event_path(@schedule_event), html: { method: :put } do |f|
      = f.input :user_id, as: :hidden, input_html: { value: @user.id }
      = f.input :score_type, as: :hidden,  input_html: { value: @score_type }
      .form-inputs.block_content
        .inline
          = f.input :grade, required: true, as: :float, step: 0.01, label: t(".grade"), input_html: { value: @acu.try(:grade), min:0, max:10 } if @ac.evaluative
          - if @ac.frequency  
            = f.input :working_hours, required: true, as: :float, label: t(".frequency"), input_html: { value: @acu.try(:working_hours), min:0, max: @ac.max_working_hours, placeholder: t(:info_frequency, scope: [:chat_rooms, :user_messages], wh:@ac.max_working_hours.to_s ) } 
          %span= link_to_function t(:save), 'finish_evaluation(this)', class: 'btn btn_main'

:javascript
  function finish_evaluation(btn){
    var form = $(btn).parents('form:first');
    $.put(form.attr('action'), form.serialize(), function(data){
      jQuery.fancybox.close();
      scoreType = "#{@score_type}";
      id_elem = "#{@ac.id}_#{@user.id}";

      if(scoreType=='evaluative')
        grade = $('#academic_allocation_user_grade').val();
      else
        grade = $('#academic_allocation_user_working_hours').val();  
 
      grad_ = $.isNumeric(grade) ? grade : data.situation;

      $('a#'+id_elem).text(grad_);
      var td = $('a#'+id_elem).closest('td');
      td.attr( "class", data.class_td);
      td.addClass("ScheduleEvent");

      flash_message(data.notice, 'notice');
    }).error(function(data){
      var data = $.parseJSON(data.responseText);
      if (typeof(data.alert) != "undefined")
        flash_message(data.alert, 'alert', 'fancybox-outer');
    });
  }
 
