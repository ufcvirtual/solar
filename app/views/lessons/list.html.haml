.list_lessons{ :"data-link-list" => list_lessons_path(allocation_tags_ids: @allocation_tags_ids, offer_id: params[:offer_id]) }
  = hidden_field_tag(:allocation_tags_ids, params[:allocation_tags_ids])

  = link_to t('.new_module'), new_lesson_module_path(allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => t('.new_module'), class: 'link_new_module title_link', id: 'new-module'
  .import_lessons{ style: 'margin-top: 2px;' }= link_to t('lessons.list.import_l'), "#void", onclick: 'import_lessons(this)', :'data-url' => import_steps_lessons_path(allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => t('lessons.list.import_l'), class: 'title_link'

  = render partial: 'lessons/list/modules', locals: { all_groups: @all_groups }

- if @academic_allocations.any?
  = link_to content_tag(:i, nil, class: 'icon-ellipsis'), list_lessons_path(page: @academic_allocations.next_page, allocation_tags_ids: @allocation_tags_ids), class: 'load-more-allocations', remote: true, :"data-tooltip" => t(:load_items) if @academic_allocations.next_page

= javascript_include_tag 'tablesorter', 'tooltip', 'groups_tags'

:javascript
  var div_list = $(".list_lessons");
  var offer_id = "#{escape_once(params[:offer_id])}";

  function import_lessons(link){
    var url = $(link).data('url');
    $(link).call_fancybox({href : url, open: true, minHeight: '550px', minWidth: '800px'});
  }

  jQuery(function($) {

    $(".expand, .compress").click(function(){
      $(this).parent().hide();
      $($(this).parent().siblings()[0]).show();
    });

    $(".btn_edit, .btn_del, .release_lessons, .download_lesson_zip, .manage_files_lesson, .export_lessonaudio").attr("disabled", true);

    $(".link_new_lesson, .link_new_module, .edit_module").call_fancybox({
      width: '70%'
    });

    $('.lesson_check_all').map(function(){
      $(this).nice_checkbox({
        objects_to_change_status: ['.manage_files_lesson', '.download_lesson_zip', '.release_lessons', '[id^="move_lesson_from"]', '.export_lessonaudio']
      });
    });

    $(".link_edit_lesson").click(function(){
      var selected_lessons = get_selected_lessons($(this).data('module-id'));

      if(selected_lessons.length == 1){
        url = $(this).data("link-edit").replace(':id', selected_lessons[0]);
        $(this).call_fancybox({href : url, open: true});
        return false;
      }else
        flash_message("#{I18n.t(:one_lesson_must_be_selected, scope: [:lesson_files])}", "alert");

      return false;
    });

    $('[id^="move_lesson_from_"]').click(function(){
      var dropdown_div  = $($(this).parent()).children('#lesson_dropdown');
      var lesson_ids = get_selected_lessons($(this).attr("id").split('_')[3]);
      if(can_do_action(lesson_ids))
        $(dropdown_div).toggle();
      else
        $(dropdown_div).hide();
        event.preventDefault();
    });

    $('[id^="btn-cancel-move-"]').click(function(){
      $($(this).get(0).parentNode.parentNode.parentNode.parentNode).hide();
    });

    $(".move_lessons").click(function(){
      erase_flash_messages();
      var module_id = $(this).data("module-id");
      var lesson_ids = get_selected_lessons(module_id);
      var destination_module = $("input[name='move_to_module']:checked", ".module-"+module_id);

      if(can_do_action(lesson_ids)){
        if(destination_module.length < 1) // se nenhum módulo destino foi selecionado
          alert("#{I18n.t(:must_select_module, scope: [:lessons, :errors])}");
        else{
          var url = $(this).data('link-move').replace('lessons_param', lesson_ids).replace('module_param', destination_module.val()).replace("undefined", "");

          $.put(url, function(data){
            flash_message(data.msg, 'notice');

            $.get($('.list_lessons').data('link-list'), function(data){
              $('.list_lessons:first').replaceWith(data);
            });
          }).fail(function(data){
            flash_message(data.msg, 'alert');
          });
        }
      }

    });

    $('.change_lesson_status, .release_lessons').click(function() {
      erase_flash_messages();
      $('#lesson_dropdown').hide();

      var module_id = $(this).data("module-id");
      var url = $(this).data("link-update");
      if(typeof(module_id) != "undefined" || $(this)[0].className == "change_lesson_status"){

        if ($(this)[0].className != "change_lesson_status"){
          var lesson_ids = get_selected_lessons($(this).data('module-id'));
          if(can_do_action(lesson_ids))
            url = url.replace(':id', lesson_ids);
          else
            return false;
        }

        $.put(url, function(data){
          $.get($('.list_lessons').data('link-list'), function(data){
            $('.list_lessons:first').replaceWith(data);
          });
          flash_message(data.msg, data.type);
        }).error(function(data) {
          if(typeof(module_id) != "undefined"){
            $.get($('.list_lessons').data('link-list'), function(data2){
              $('.list_lessons:first').replaceWith(data2);
            if (typeof(data.responseText) != "undefined")
              flash_message(JSON.parse(data.responseText).msg, 'alert');
            });
          }

        });
      }

      return false;
    });

    $(".up, .down").click(function() {
      $('#lesson_dropdown').hide();
      var row = $(this).parents("tr:first");
      var id1 = row.attr('lesson_id');

      var f_error = function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
      };

      if ($(this).is(".up")) {
        if (row.prev().attr('lesson_order') == undefined) return false;

        var id2 = row.prev().attr('lesson_id');
        var url = "#{change_order_lesson_path(':id1', ':id2')}".replace(':id1', id1).replace(':id2', id2);

        $.put(url, function(){ row.insertBefore(row.prev()); }).fail(f_error);

      } else { // down
        if (row.next().attr('lesson_order') == undefined) return false;

        var id2 = row.next().attr('lesson_id');
        var url = "#{change_order_lesson_path(':id1', ':id2')}".replace(':id1', id1).replace(':id2', id2);

        $.put(url, function(data, t, x){ row.insertAfter(row.next()); }).fail(f_error);
      }
      return false;
    });

    $(".delete_module").click(function(){
      $('#lesson_dropdown').hide();

      $(this).nice_delete({
        parent: 'div.module',
        complement_success: function(data){
          $.get($('.list_lessons').data('link-list'), function(data){
            $('.list_lessons:first').replaceWith(data);
          });
        }
      });
    });

    $(".manage_files_lesson").click(function(){
      $('#lesson_dropdown').hide();
      var module_id = $(this).data('module-id');
      var selected_lessons = get_selected_lessons(module_id);

      if(selected_lessons.length == 1){
        lessons_with_file_type = $("input.m_"+module_id+":checked[data-file-type='true']");
        if(lessons_with_file_type.length == selected_lessons.length){
          url = $(this).data("link-manage").replace('lessons_ids', selected_lessons[0]);
          $(this).call_fancybox({href : url, open: true});
        }else
          flash_message("#{I18n.t(:lesson_must_have_file_type, scope: [:lesson_files])}", "alert");
      }else
        flash_message("#{I18n.t(:one_lesson_must_be_selected, scope: [:lesson_files])}", "alert");
    });

    $(".delete_lesson").click(function(){
      var lessons = get_selected_lessons($(this).data("module_id"));

      if(can_do_action(lessons_ids)){
        $(this).nice_delete({
          url: $(this).data("link-delete").replace(':id', lessons),
          complement_success: function() {
            $.get($('.list_lessons').data('link-list'), function(data){
              $('.list_lessons:first').replaceWith(data);
            });
          }
        });
      }

    });

    // download dos arquivos das aulas selecionadas em um módulo
    $(".download_lesson_zip").click(function(){
      var lessons = get_selected_lessons($(this).data("module-id"));
      var link_download = $(this).data("link-download").replace('lessons_param', lessons);

      if(can_do_action(lessons_ids)){
        jQuery.ajax({
          url: $(this).data("link-verify").replace('lessons_param', lessons),
          type: "GET",
          success: function(){
            window.location.href = link_download;
          },
          fail: function() {
            flash_message("#{I18n.t(:invalid_lesson_to_download, :scope => [:lessons, :errors])}", "alert");
          }
        });
      }
    });

    $(".export_lessonaudio").click(function(){
      var selected_lessons = get_selected_lessons($(this).data('module-id'));
      if(selected_lessons.length == 1){
        var id = selected_lessons[0];
        var url_get = "#{verify_contains_audio_lesson_path(id: ':id')}";
        var obj = this;
        $.get(url_get.replace(':id', id), function(data) { 
          
          url = $(obj).data("link-to-export").replace(':id', id);
          $(obj).call_fancybox({href : url, width: '700pox', height: 'auto', open: true});
          return false;

        }).fail(function(data){
          $.fancybox.close();
          var data = $.parseJSON(data.responseText);
          if (typeof(data.alert) != "undefined")
            flash_message(data.alert, 'alert');
        });
      }else
        flash_message("<%=I18n.t(:one_lesson_must_be_selected, scope: [:lesson_files])%>", "alert");

      return false;
    });

  });

  // função que retorna uma lista de ids das aulas selecionadas em determinado módulo
  function get_selected_lessons(module_id){
    lessons_ids = new Array;
    module_check_boxes = $('[name="m_'+module_id+'"]');
    // coloca, no array, todos os ids das aulas selecionadas para efetuar a ação do módulo
    module_check_boxes.map(function(){
      if(this.checked == true){ lessons_ids.push(this.value) }
    });
    return lessons_ids;
  }

  // verifica se pode realizar a ação (não permitirá e exibirá alerta se nenhuma aula tiver sido selecionada)
  function can_do_action(selected_lessons){
    if(selected_lessons.length == 0){
      flash_message('#{I18n.t(:must_select_lessons, scope: [:lessons, :notifications])}', "alert");
      return false;
    }else
      return true;
  }
