- if @academic_allocations.any?
  - @academic_allocations.each_with_index do |academic_allocation, idxm|

    - lesson_module = LessonModule.find(academic_allocation.academic_tool_id)
    - lessons       = lessons_by_module(lesson_module.id)
    - has_group     = AllocationTag.find(academic_allocation.allocation_tag_id).group
    .block_wrapper.module{id: "module_#{lesson_module.id}"}
      .block_title_module.block_module
        %h2
          = lesson_module.name
          .block_buttons
            = link_to (content_tag(:i, nil, :class=>'icon-edit')), edit_lesson_module_path(lesson_module, allocation_tags_ids: @allocation_tags_ids), class: 'block_title_button edit_module', :'data-tooltip' => t("lessons.list.edit_lesson_module")
            = link_to (content_tag(:i, nil, :class=>'icon-trash')), "#", class: 'block_title_button delete_module', :'data-link-delete' => lesson_module_path(lesson_module, allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => t("lessons.list.delete_lesson_module"), :"data-module-id" => lesson_module.id
        -if has_group
          - unless lesson_module.is_default
            = render "groups/groups_tags", all_groups: all_groups, groups: lesson_module.groups, tool: lesson_module, paths: {add: add_group_to_lesson_modules_path(id: "param_id", tool_id: lesson_module.id), remove: remove_group_from_lesson_modules_path(id: "param_id", tool_id: lesson_module.id), unbind: unbind_group_from_lesson_modules_path(id: "param_id", tool_id: lesson_module.id)}
          - else
            .input.groups_tags
              = t(".group")
              %span.collection_check_boxes= lesson_module.groups.first.code
      .block_content_toolbar
        .block_toolbar_left.btn-group
          %a.btn.btn_main{:href => "#", 'data-dropdown' => "#dropdown_#{lesson_module.id}"}
            = content_tag(:i, nil, :class=>'icon-plus')
            %i.icon-arrow-down-triangle
          %div{:id=>"dropdown_#{lesson_module.id}", :class=>"dropdown dropdown-tip"}
            %ul.dropdown-menu
              %li= link_to (t(:new_lesson, scope: [:lessons, :list])), new_lesson_path(lesson_module_id: lesson_module.id, allocation_tags_ids: @allocation_tags_ids), class: "link_new_lesson"
              %li= link_to "Importar aula", "#", onclick: "javascript: alert('importar aula');", id: 'import_lesson'
        .block_toolbar_right
          .btn-group{class: "module-#{lesson_module.id}"}
            = link_to (content_tag(:i, nil, :class=>'icon-move')), "#", :class => 'btn', id: "move_lesson_from_#{lesson_module.id}", :'data-tooltip' => t("lessons.list.move_lesson"), "data-dropdown-alt" => "#move_lesson_dropdown_#{lesson_module.id}", disabled: true
            = link_to (content_tag(:i, nil, :class=>'icon-archive')), "#", class: 'btn btn_default manage_files_lesson', :"data-module-id" => lesson_module.id, :'data-tooltip' => t("lessons.list.manage_files"), :"data-link-manage" => lesson_files_path(lesson_id: 'lessons_ids'), :'data-single' => true
            = link_to (content_tag(:i, nil, :class=>'icon-install')), "#", class: 'btn download_lesson_zip', :'data-tooltip' => t("lessons.list.download_zip"), :"data-link-verify" => verify_download_lessons_path(lessons_ids: "lessons_param", allocation_tags_ids: @allocation_tags_ids), :"data-link-download" => download_files_lessons_path(lessons_ids: 'lessons_param', allocation_tags_ids: @allocation_tags_ids), :"data-module-id" => lesson_module.id
            = link_to (content_tag(:i, nil, :class=>'icon-checkmark')), "#", class: 'btn release_lessons', :"data-module-id" => lesson_module.id, :'data-tooltip' => t("lessons.list.release"), :"data-link-update" => change_status_lesson_path(id: ':id', status: Lesson_Approved, allocation_tags_ids: @allocation_tags_ids)
            = link_to (content_tag(:i, nil, :class=>'icon-edit')), "#", class: 'btn link_edit_lesson btn_edit', :'data-tooltip' => t("lessons.list.edit_lesson"), :"data-module-id" => lesson_module.id, :"data-link-edit" => edit_lesson_path(id: ':id', allocation_tags_ids: @allocation_tags_ids)
            = link_to (content_tag(:i, nil, :class=>'icon-trash')), "#", class: 'btn delete_lesson btn_del', :'data-tooltip' => t("lessons.list.delete_lesson"), :'data-link-delete' => lesson_path(id: ':id', allocation_tags_ids: @allocation_tags_ids), :'data-module_id' => lesson_module.id
            #lesson_dropdown.dropdown-alt.dropdown-tip
              .dropdown-panel
                #dropdown_alert{:style => "display: block"}
                  %ul
                  - academic_allocation.allocation_tag.academic_allocations.where(academic_tool_type: 'LessonModule').each_with_index do |aallocation, idx|
                  - lmodule = LessonModule.find(aallocation.academic_tool_id)
                    - unless idx == idxm
                      %li
                        %span{style: "display: inline"}
                          = radio_button_tag(:move_to_module, lmodule.id)
                          = lmodule.name
                  .control_buttons{align: "right"}
                    = button_tag t("lessons.list.cancel"), type: :button, class: 'btn', id: "btn-cancel-move-#{lesson_module.id}"
                    = button_tag t("lessons.list.move"), type: :button, class: 'btn btn_main move_lessons', :"data-module-id" => lesson_module.id, :"data-link-move" => change_module_lesson_path(id: lesson_module.id, allocation_tags_ids: @allocation_tags_ids, lessons_ids: 'lessons_param', move_to_module: 'module_param')
      / Lessons list
      - unless lessons.nil? or lessons.empty?
        %table.tb_list{:"data-default-module" => lesson_module.is_default, class: "table-module-#{lesson_module.id}"}
          %thead
            %tr.lines
              %th.center.no_sort{style: 'width: 25px'}= check_box_tag( 'all', 'all', false, {id: "all_m_#{lesson_module.id}", class: 'lesson_check_all', :"data-children-names" => "m_#{lesson_module.id}"} )
              %th.center.no_sort= t("lessons.list.order")
              %th= t("lessons.list.name")
              %th.center{style: 'width: 10%'}= t("lessons.list.type")
              %th.center.no_sort= t("lessons.list.availability")
              %th.center.no_sort= t("lessons.list.acceptance")
          %tbody
            - lessons.each_with_index do |lesson, idxl|
              %tr.lines{lesson_name: lesson.name, lesson_id: lesson.id, lesson_order: lesson.order, lesson_status: lesson.status}
                %td.center
                  = check_box_tag( "m_#{lesson_module.id}", lesson.id, false, {class: "m_#{lesson_module.id}", :"data-file-type" => (lesson.type_lesson == Lesson_Type_File) })
                %td.center{style: "width: 50px;"}
                  .lesson_arrows
                    .lesson_arrow_up= link_to (image_tag "lesson/up_arrow.png"), "#", class: 'up'
                    .lesson_arrow_down= link_to (image_tag "lesson/down_arrow.png"), "#", class: 'down'
                %td
                  %div
                    - if lesson.address.blank?
                      = lesson.name
                    - else
                      = link_to lesson.name, edition_lesson_url(lesson, allocation_tags_ids: @allocation_tags_ids, offer_id: params[:offer_id]), class: "link_content lesson", "data-fancybox-type" => "iframe"
                    - if lesson.description
                      .description
                        .minimun
                          = simple_format(lesson.description.truncate(200))
                          - if lesson.description.size>200
                            = content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t("lessons.list.expand_description"))
                        .complete.invisible
                          = simple_format(lesson.description)
                          = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t("lessons.list.compress_description"))
                %td= (lesson.type_lesson == Lesson_Type_File ? t("lessons.list.file_type") : t("lessons.list.link_type"))

                %td.center{style: "width: 160px"}
                  = t("lessons.list.since") unless not(lesson.schedule.end_date.nil?)
                  = [l(lesson.schedule.start_date, format: :normal), (lesson.has_end_date? ? l(lesson.schedule.end_date, format: :normal) : t(:no_end_date, scope: [:lessons, :list]))].join(" - ")

                %td.center{style: "width: 70px"}
                  - status = [Lesson_Test, Lesson_Approved].delete_if {|v| v == lesson.status}
                  = link_to (image_tag "#{(lesson.status == Lesson_Test) ? 'rejected' : 'released'}.png"), "#", class: 'change_lesson_status', :"data-link-update" => change_status_lesson_path(id: lesson.id, status: status, allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => (lesson.status == Lesson_Test ?  t("lessons.list.draft") :  t("lessons.list.released")), :"data-module-id" => lesson_module.id
      - else
        .block_content_text_list.text_none= t(:none, scope: [:lessons, :list])

- else
  .block_content.block_content_text= t(:none, scope: [:lesson_modules])
