- lessons   = @lessons.nil? ? lesson_module.lessons_to_open(current_user) : @lessons
- selected  = @lesson.nil? ? lessons.first.id : @lesson.id
- lessons_c = lessons.collect { |l| [l.name, l.id, { :'data-path' => l.path, :'data-draft' => l.is_draft? }] }

%a.btn.btn_dropdown#lesson-selected{ href: '#', :"data-dropdown" => '#lesson-options-dropdown', :'aria-label' => t('lessons.open.lesson_menu', lesson: @lesson.name) }
  = @lesson.name
  %i.icon-arrow-down-triangle{:'aria-hidden' => 'true'}
.dropdown.dropdown-tip#lesson-options-dropdown
  %ul.dropdown-menu
    - lessons_c.each do |lesson|
      %li{role: 'menuitem'}= link_to lesson[0], '#', {:'data-path' => lesson[2][:'data-path'], :'data-id' => lesson[1], class: (lesson[1] == @lesson.id ? 'selected' : ''), onkeydown: 'click_on_keypress(event, this);', :'data-draft' => lesson[2][:'data-draft']}

:javascript
  $(function(){
    $("#lesson-options-dropdown ul li a").on("keydown", function(event) {
      var keynum = event.which || event.keyCode;

      switch( keynum ) {
        case 40:
          $(this).closest("li").next("li").find("a").focus();
          break;
        case 38:
          $(this).closest("li").prev("li").find("a").focus();
          break;
        case 27:
          $("#lesson-selected").trigger('click');
          setTimeout(function() {
            closeDropdown();
          }, 250);
          $("#lesson-selected").focus();
          break;
        case 13:
          $(this).trigger('click');
          $("#lesson-selected").trigger('click');
          setTimeout(function() {
            closeDropdown();
          }, 250);
          $("#lesson-selected").focus();
          break;
      }
    });
  });
