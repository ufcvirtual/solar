.request_profile
  .position_correction
    %span.form_requirement= t(:required_fields)
  .request_profile_form
    = simple_form_for(@allocation, html: {id: "request_profile_form"}) do |f|
      %h1#lightBoxDialogTitle= t(".new_profile_request")
      %span.form_requirement= t(:required_fields)
      .flash_message_wrapper

      .form-inputs.block_content
        .filter
          .profile
            = label_tag :profile_id, t(".profile")
            %span= select_tag :profile_id, options_from_collection_for_select(@profiles, "id", "name", params[:profile_id]), include_blank: false
          .curriculum_unit_type
            = label_tag :curriculum_unit_type, t(".type")
            %span= select_tag :curriculum_unit_type, options_from_collection_for_select(@types, "id", "description", params[:type_id]), include_blank: true

          .course
            = label_tag :course, t(".course")
            %span= select_tag :course, nil

          .curriculum_unit
            = label_tag :curriculum_unit, t(".curriculum_unit")
            = select_tag :curriculum_unit, nil

          .semester
            = label_tag :semester, t(".semester")
            = select_tag :semester, nil, :'data-permit-offer' => true

          .offer_groups_options
            .radio_options
              = radio_button :radio, :option, "offer", disabled: true
              = label_tag :radio_option_offer, t(".offer")

              = radio_button :radio, :option, "group", disabled: true
              = label_tag :radio_option_group, t(".group")

            .groups
        .right_buttons
          = button_tag t(".cancel"), :type => 'button', :onclick => "jQuery.fancybox.close()", class: 'btn btn_default btn_lightbox', alt: t(:cancel)
          = button_tag t(".save"), class: "btn btn_main btn_lightbox", type: "button", id: "save"

= javascript_include_tag "autocomplete", "edition"
= stylesheet_link_tag "autocomplete"

:javascript

  $(function(){

    var admin_profile = "#{Profile.where("cast(types & #{Profile_Type_Admin} as boolean)").first.id}"
    $("#profile_id").combobox();

    $("#save").click(function(){
      var params = {
        "profile_id": $("#profile_id").val(),
        "curriculum_unit_type_id": $("#curriculum_unit_type").val(),
        "course_id": $("#course").val(),
        "curriculum_unit_id": $("#curriculum_unit").val(),
        "semester_id": $("#semester").val(),
        "groups_id": $('[name="group[group_id][]"]:checked').map(function(){ return $(this).val() }).get().join(" ")
      };

      var request_profile_url = "#{profile_request_allocations_path('profile_id')}".replace('profile_id', $("#profile_id").val());

      $.post(request_profile_url, params, function(response){
        $.fancybox.close();
        $.get($(".profiles_list").data("link-list"), function(data){
          $(".profiles_list").replaceWith(data);
          if (typeof(response) != "undefined" && typeof(response.msg) != "undefined")
            flash_message(response.msg, 'notice');
        });
      }).fail(function(data){
        var response = JSON.parse(data.responseText);
        if (typeof(response.msg) != "undefined"){
          erase_flash_messages();
          flash_message(response.msg, 'alert', "request_profile .flash_message_wrapper");
        }
      });
    });

    $(".request_profile").css("width", "500px");
    $(".form-inputs.block_content").css("height", "265px");

    $( "#profile_id" ).combobox({
      select: function( event, ui ) {
        $('#curriculum_unit_type').combobox("option", { disabled: (ui.item.value == admin_profile) });
      }
    });

  });
