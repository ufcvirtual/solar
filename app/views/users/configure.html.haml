= simple_form_for @configure, :method => :put, html: {id: "configure_form"} do |f|

  .form-inputs.block_content
    %fieldset.radio_theme
      %legend= t(".theme")
      = f.collection_radio_buttons :theme, [['blue', t(".theme_blue")] ,['high_contrast', t(".theme_high_contrast")]], :first, :last
    %fieldset
      %legend= t(".notification_mail")
      = f.input :message, as: :boolean, input_html: { onchange: 'change(this);', checked: @configure.message }
      = f.input :post, as: :boolean, input_html: { onchange: 'change(this);', checked: @configure.post }
      = f.input :exam, as: :boolean, input_html: { onchange: 'change(this);', checked: @configure.exam }
      = f.input :academic_tool, as: :boolean, :input_html => { onchange: 'change(this);', checked: @configure.academic_tool }


:javascript

  $('#main_content_accesskey').html("#{t(".configure")}");

  function change(elem) {
    $('form#configure_form').serialize_and_submit({});
  }

  $('input[type=radio]').on('change', function(event) {

    if (!confirm("#{I18n.t(:message_confirm_user)}")){
      var elem_checked;
      radios_theme = $('.radio_theme').find('input');
      radios_theme.each(function(){
        if(!$(this).is(':checked')){
          elem_checked = this;
        }
      });
      $(elem_checked).prop('checked', true);
      return false;
    }
    $('form#configure_form').serialize_and_submit({});
    location.reload();
  });