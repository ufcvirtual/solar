/ - groups = GroupAssignment.all_by_assignment_id(@assignment.id, @allocation_tag.id)

/ .group_management
/   .block_wrapper.manage_groups
/     .block_title
/       %h2
/         %i.icon-users
/         =t :groups, :scope => [:assignment, :group_assignments]
/       %span.group_elements_float
/         - if can? :manage_groups, @assignment
/           - btn_class = @assignment.assignment_in_time?(@allocation_tag, current_user.id) ? "btn btn_main" : "btn btn_disabled"
/           = button_tag t(:manage_groups, :scope => [:assignment, :group_assignments]), :class => btn_class, :id => "manage_group_assignment", :alt => t(:manage_groups, :scope => [:assignment, :group_assignments]), :onclick => "javascript:btn_manage_groups('#{@assignment.id}', '#{verify_group_of_assignments(@allocation_tag, @assignment.id)}');", :disabled => !@assignment.assignment_in_time?(@allocation_tag, current_user.id)
/           = button_tag(:type => 'button', :class => "btn btn_caution", :id => "btn_cancel_management", :onclick => "javascript:cancel_management('#{manage_groups_assignment_path(@assignment.id)}');", :alt => t(:cancel, :scope => [:assignment, :group_assignments])) do
/             = content_tag(:span, t(:cancel, :scope => [:assignment, :group_assignments]))
/           = button_tag t(:save, :scope => [:assignment, :group_assignments]), :class => "btn btn_main", :id => "btn_save_management", :onclick => "javascript:save_management('#{manage_groups_assignment_path(@assignment.id)}');", :alt => t(:save, :scope => [:assignment, :group_assignments])

/   .group_assignment_content
/     - unless groups.nil? or groups.empty?
/       - groups.each do |group|
/         - group_info = info_assignment_group(group)
/         .group_participants{:id => ["group", group.id]}
/           %h3{:class => "group_name_#{!group_info["evaluated"]}", :alt => "#{group_info["error_message"]}"}
/             = group.group_name
/             %span.group_elements_float
/               =# button_to t(:evaluate, :scope => [:assignment, :group_assignments]), student_assignment_path(@assignment.id, :group_id => group.id), {:class => "btn btn_default evaluate_group", :alt => t(:evaluate, :scope => [:assignment, :group_assignments]), :method => :get} #se tirar "method". envia como post; se deixar, ignora o "group_id"
/               = button_tag t(:evaluate, :scope => [:assignment, :group_assignments]), :onclick => "javascript:window.location.href='#{student_assignment_path(@assignment.id, :group_id => group.id)}'", :class => "btn btn_default evaluate_group"
/           %div{:class => "edit_group_#{!group_info["evaluated"]}", :style => "display:none;"}
/             = text_field_tag "new_groups_names[][#{@assignment.id}]", group.group_name, :id => "text_field_group_#{group.id}", :class => "rename_group" 
/             %a.remove_group{:onclick => "javascript:delete_group('group_#{group.id}', #{@assignment.id}, #{group_info["can_remove"]});", :title => "#{group_info["error_message"]}", :alt => "#{t(:remove, :group_name => group.group_name, :scope => [:assignment, :group_assignments])}"}= "x"
/           %div{:class => "group_information_#{!group_info["evaluated"]}"}
/             = group_info["quantity_files_sent"]
/             =t :files, :scope => [:assignment, :files]
/             %span.group_elements_float
/               =t :grade, :scope => [:assignment, :information]
/               = (group.sent_assignment.nil? or group.sent_assignment.grade.nil?) ? "-" : group.sent_assignment.grade
/           - group_participants = GroupParticipant.all_by_group_assignment(group.id)
/           %ul{:id => "#{!group_info["evaluated"]}", :value => "#{group.id}"}
/             - unless group_participants.empty?
/               - group_participants.each do |participant|
/                 - participant_info = info_assignment_group_participant(participant.user_id, !group_info["evaluated"], group) 
/                 %li{:class => "student_#{participant.user_id}", :value => "#{participant.user_id}", :id => "#{participant_info["can_be_moved"]}", :onmouseover => "javascript:student_mouseover(this, '#{participant_info["error_message"]}');", :onmouseout => "javascript:student_mouseout(this);", :'data-tooltip' => participant.user.name}= truncate(participant.user.name, :length => 40, :omission => "...")
/             - else
/               %li.no_students_message=t :no_participant, :scope => [:assignment, :group_assignments]

/     .group_participants.group_box_without_info
/       %h3.group_name_true=t :students_with_no_group, :scope => [:assignment, :group_assignments]
/       .edit_group_true{:style => "display:none;"}
/         .label=t :students_with_no_group, :scope => [:assignment, :group_assignments]
/         = hidden_field_tag "new_groups_names[][#{@assignment.id}]", 'no_group', :class => "rename_group"
/       %ul.ul_no_group
/         - unless @students_without_group.nil? or @students_without_group.empty?
/           - @students_without_group.each do |student_without_group| 
/             %li#true{:class => "student_#{student_without_group.id}", :value => "#{student_without_group.id}", :onmouseover => "javascript:student_mouseover(this, 'no_message');", :onmouseout => "student_mouseout(this);", :'data-tooltip' => student_without_group.name}= truncate(student_without_group.name, :length => 40, :omission => "...")
/         - else
/           %li.no_students_message=t :no_participant, :scope => [:assignment, :group_assignments]

/     .import_and_new_groups

/ = javascript_include_tag "tooltip"

/ :javascript
/   // as variáveis e os métodos aqui dispostos não podem ser levados ao arquivo 'group_assignments.js.erb' 
/   // devido à necessidade de variáveis da tela e a geração de inconsistência nos grupos excluídos
/   var deleted_groups = new Array();

/   function show_import_and_new_groups_box(show_import_button) {

/     var new_and_import_groups_box = new Array();

/     new_and_import_groups_box.push('<div class="group_assignments_manage_buttons group_box_without_info">');
/       new_and_import_groups_box.push('<div class="group_assignments_manage_buttons_title">');
/       new_and_import_groups_box.push('</div>');
/       new_and_import_groups_box.push('<ul>');
/         new_and_import_groups_box.push('<li class="btn_new">');
/           new_and_import_groups_box.push('<input type="button" style="width:90px" id="new_group_assignment" value="#{t(:new_group, :scope => [:assignment,:group_assignments])}" class="btn btn_default" onclick="javascript:btn_new_group(#{@assignment.id}, \'#{t(:no_participant, :scope => [:assignment, :group_assignments])}\', \'#{t(:new_group, :scope => [:assignment, :group_assignments])}\');"/>');        
/         new_and_import_groups_box.push('</li>');
/           if (show_import_button == 'true'){
/             new_and_import_groups_box.push('<li id="btn_import">');
/               new_and_import_groups_box.push('<input type="button" style="width:90px" id="import" value="#{t(:import_groups, :scope => [:assignment, :group_assignments])}" class="btn btn_default" onclick="javascript:showImportGroupBox(\'#{import_groups_page_assignment_path(@assignment.id)}\', \'\');"/>');
/             new_and_import_groups_box.push('</li>');
/           }
/       new_and_import_groups_box.push('</ul>');
/     new_and_import_groups_box.push('</div>');

/     // cria a nova div de novo grupo 
/     $(new_and_import_groups_box.join("")).appendTo($(".import_and_new_groups"));
/   }

/   function delete_group(group_div_id, assignment_id, can_manage_group) {
/     // apenas permite deleção se o grupo não tiver arquivos enviados
/     if (can_manage_group){
/       var deleted_div = $('#'+group_div_id);
/       var all_li      = $('li', deleted_div); // todos os "li" de uma "ul" = todos os participantes de um grupo

/       all_li.each(function(i){
/         if($(all_li[i]).attr('class').indexOf("no_students_message") == -1){
/           $(all_li[i]).appendTo($('.ul_no_group'));  // remove os participantes do grupo e acrescenta na lista de sem grupo
/           $('.ul_no_group > .no_students_message').remove(); // remove a mensagem de "sem participantes" em "alunos sem grupo"
/         }
/       });

/       deleted_div.remove(); // remove o grupo

/       if (group_div_id.indexOf('group_new') == -1) { //se não for um novo grupo sendo excluído
/         deleted_groups.push(group_div_id); // acrescenta o id da div do grupo aos grupos excluídos
/       }

/     }
/   }