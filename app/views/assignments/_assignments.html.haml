- if assignments.any?
  %table.tb_list
    %thead
      %tr.lines
        %th= t('assignments.list.description')
        %th.center.date{ style: 'width: 22%;' }= t('assignments.list.date_range')
        %th.center{style: "width: 8%;"}= t(:evaluative, scope: [:scores, :index])
        %th.center{style: "width: 8%;"}= t(:frequency, scope: [:scores, :info])  
        %th.no_sort{ style: 'width: 19%;' }
    %tbody
      - assignments.each do |assignment|
        - is_group_type = (assignment.type_tool.to_i == Assignment_Type_Group)
        %tr.assignment.lines
          %td
            %div.title-yellow= assignment.name
            - if assignment.description.size > 180 
              .enunciation
                .enunciation_slice= assignment.description.slice(0..180) << '...'
                .enunciation_complete= assignment.description
                .more_or_less
                  %a.enunciation_more.link_content{ href: '#' }= t('assignments.list.more')
                  %a.enunciation_less.link_content{ href: '#' }= t('assignments.list.less')
            - else
              = assignment.description
            .equivalent
              - unless assignment.eq_name.blank?
                %a{ href: '#', :"data-dropdown" => "#dropdown_eq_#{assignment.academic_tool_id}" }
                  %i.icon-flow-parallel
                  = t('scores.info.equivalency')
                  %i.icon-arrow-down-triangle
                .dropdown.dropdown-tip{id: "dropdown_eq_#{assignment.academic_tool_id}"}
                  %ul{ class: 'dropdown-menu' }
                    = raw t('scores.info.equivalent', name: assignment.eq_name)
              - else
                %a{ href: '#', :"data-dropdown" => "#dropdown_eq_#{assignment.academic_tool_id}", :'data-url' => equalities_tools_path(tool_type: assignment.academic_tool_type, ac_id: assignment.id), onclick: 'open_dropdown(this);' }
                  %i.icon-flow-parallel
                  =t('scores.info.equalities')
                  %i.icon-arrow-down-triangle
                .dropdown.dropdown-tip{id: "dropdown_eq_#{assignment.academic_tool_id}"}
                  %ul{ class: 'dropdown-menu' }
          %td.center
            %div= [l(assignment.start_date.to_date, format: :normal), l(assignment.end_date.to_date, format: :normal)].join(' - ')
            %div= [(assignment.start_hour), (assignment.end_hour)].join(' - ') unless assignment.start_hour.blank?
          %td.center= t(assignment.evaluative, scope: [:scores, :info])
          %td.center= t(assignment.frequency, scope: [:scores, :info])
          %td.center
            = link_to content_tag(:i, nil, class: 'icon-users'), '#', class: 'btn participants', :'data-url' => participants_assignment_path(assignment.academic_tool_id), :"data-tooltip" => (is_group_type ? t('.groups') : t('.participants')), onclick: 'open_div(this, event);', :'data-div' => '.participants_box', id: "assignment-#{assignment.academic_tool_id}", :'data-hide' => true
            - if is_group_type
              - closed = (assignment.closed == 't')
              - if @can_manage
                = link_to content_tag(:i, nil, class: 'icon-user-add'), '#', class: "btn manage_groups #{!closed ? '' : 'disabled'}", :"data-tooltip" => t(".manage_groups"), disabled: closed, :"data-url" => group_assignments_path(assignment_id: assignment.academic_tool_id)
              - if @can_import
                = link_to content_tag(:i, nil, class: 'icon-import'), '#', class: "btn import_groups #{!closed ? '' : 'disabled'}", :"data-tooltip" => t(".import_groups"), disabled: closed, :"data-url" => import_list_group_assignments_path(assignment_id: assignment.academic_tool_id)
          %tr
            %td{ colspan: 5 }
              .participants_box.invisible{ class: "assignment-#{assignment.academic_tool_id}" }
                
- else
  .text_none.empty_message= t(:itens_not_found)

= javascript_include_tag 'group_assignments'
 
:javascript
  $(function(){
    $(".manage_groups").not(".disabled").click(function(){
      var url = $(this).data("url");
      $(this).call_fancybox({
        href: url,
        open: true,
        afterClose:function(){
          update_list();
        }
      });
    });

    $(".import_groups").not(".disabled").click(function(){
      var url = $(this).data("url");
      $(this).call_fancybox({href: url, open: true});
    });
  });
