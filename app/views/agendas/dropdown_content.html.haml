.event_details_dropdown
  %h2
    = t ".#{@model_name.to_s.tableize}"
    = @event.respond_to?(:name) ? @event.name : @event.title
  / se for a visualização de aluno/professor
  .related_user_path.invisible
    %h3
      = @event.parents_path
      - if @groups.count > 1
        = content_tag(:i, nil, class: 'toggle_groups icon-arrow-down-triangle', :"data-tooltip" => t('.see_groups'))
  - recurring = (@event.respond_to?(:start_hour) && @event.respond_to?(:end_hour) && !(@event.start_hour.blank? || @event.end_hour.blank?))
  %h3= t('.duration') + (recurring ? "#{@event.start_hour} - #{@event.end_hour}" : t('.all_day'))
  - same_day, start_date, end_date = (@event.schedule.end_date.nil? || @event.schedule.start_date == @event.schedule.end_date), @event.schedule.start_date, @event.schedule.end_date
  %h3= t('.period') + (same_day ? (end_date.nil? ? [l(start_date, format: :normal), t(:no_end_date)].join(t('.to')) : l(start_date, format: :normal)) : [l(start_date, format: :normal), l(end_date, format: :normal)].join(t('.to')))

  %h3
    = t('.description')
    =sanitize simple_format(truncate((@event.respond_to?(:enunciation) ? @event.enunciation : @event.description) || '', length: 200, omission: "..."))

  .edition_groups.invisible
    - if (can? :edit, @model_name)
      = render 'groups/codes'

  .line

  .btn-group{style: 'width: 360px;'}
    - can_change, can_edit = (!(@event.respond_to?(:can_change?)) || @event.can_change?), !(Event::CANT_EDIT.include?(@model_name.to_s.downcase))
    .left
      - if (can_edit and (can? :destroy, @model_name, on: @allocation_tags_ids.split(' ')))
        = link_to_if can_change, (content_tag(:i, nil, class: 'icon-trash')), '#', class: 'btn btn_caution delete_event', :"data-link-delete" => polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids), :'data-tooltip' => t('.remove'), id: @event.id do
          = button_tag (content_tag(:i, nil, class: 'icon-trash')), class: 'btn btn_caution disabled', :'data-tooltip' => t('.cant_change')
    .right{style: (can?(:edit, @model_name, on: @allocation_tags_ids) ? '' : 'margin-left: 96px') }
      - if (can_edit and (can? :edit, @model_name, on: @allocation_tags_ids))
        = link_to_if can_change, (content_tag(:i, nil, class: 'icon-edit')), edit_polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids, calendar: true), class: 'btn edit_event', :'data-tooltip' => t('.edit'), id: @event.id do
          = button_tag (content_tag(:i, nil, class: 'icon-edit')), class: 'btn disabled', :'data-tooltip' => t(".cant_change")
      - if can? :show, @model_name, on: @allocation_tags_ids
        = link_to content_tag(:i, nil, class: 'icon-eye', :'aria-hidden'=>'true'), polymorphic_path([@event], allocation_tags_ids: @allocation_tags_ids), class: 'btn btn_main show_event', :'data-tooltip' => t('.details'), id: @event.id, :'aria-label'=> t('.details_about', name: @event.respond_to?(:name) ? @event.name : @event.title) + t('fancybox.open')
      = link_to content_tag(:i, nil, class: 'icon-cross', :'aria-hidden'=>'true'), '#void', class: 'btn close_dropdown link_element', :'data-tooltip' => t(:close), id: @event.id, :'aria-label'=> t('.close_details_about', name: @event.respond_to?(:name) ? @event.name : @event.title), onclick: 'close_dropdown(this);'


= javascript_include_tag 'tooltip'

= hidden_field_tag :groups_codes, @groups.map(&:code).join(',')

:javascript

  $(function(){

    var this_div = $('.event_details_dropdown').parent().parent();

    $('h2:first', this_div).attr("tabindex", "0");
    $('h2:first', this_div).focus();
    this_div.data('focus', true);

    $('.close_dropdown').on('keydown', function(e){
      if (e.which == 13){
        close_dropdown($(this).parents('.dropdown').find('h2'));
      }
    });

    $( ".fc-content a.event" ).focus(function() {
      var div = $('.close_dropdown:visible');
      close_dropdown(div.parents('.dropdown').find('h2'), $(this));
    });

    // se não for a área de edição
    if (!$(".filter").length){
      $(".edition_groups, .delete_event, .edit_event").remove();
      $(".show_event").css("margin-left", "8px");
      $(".related_user_path").removeClass("invisible");
    }else{
      $(".edition_groups").removeClass("invisible");
      $(".related_user_path").remove();
    }

    $(".toggle_groups").unbind().click(function(){

      groups = $($($(this).parents(".dropdown-panel")[0]).children("#groups_codes")[0]).val().split(",");

      if( $(this).hasClass("icon-arrow-down-triangle") ){
        var groups_div = $("<span class='groups'></span>");
        $.each(groups, function(idx){
          groups_div.append("<span class='collection_check_boxes'>"+groups[idx]+"</span>")
        });

        $(this).parent().after(groups_div);
      }else
        $(this).parent().parent().find(".groups").remove();

      $(this).toggleClass("show_groups").toggleClass("icon-arrow-down-triangle icon-arrow-up-triangle");
    });

    $(".delete_event").click(function(){
      if (!confirm("#{I18n.t(:message_confirm)}"))
        return false;

      $.delete($(this).data('link-delete'), function(data){
        flash_message(data.message, data.type_message);
        $.get($(".calendar_schedules").data("link-list"), function(data){
            $(".calendar_schedules").replaceWith(data);
        });
      }).error(function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
      })
    });

    $(".edit_event").call_fancybox();
    $(".show_event").call_fancybox({
      autoDimensions: false,
      maxWidth: 402,
      maxHeight: 500
    });


    $("a.fc-event").on("focus", function(event) {
      var dropdown = $(".dropdown:visible");
      var link_dropdown = $(event.target).attr("data-dropdown");

      if( $(dropdown).find(":focus").length === 0 && link_dropdown !== ("#"+$(dropdown).attr("id")) ) {
        $(dropdown).hide();
        $("a.fc-event").removeClass("dropdown-open");
      }
    });
  });
