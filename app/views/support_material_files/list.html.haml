.block_wrapper.list_support_material{:"data-link-list" => list_support_material_files_path(allocation_tags_ids: @allocation_tags_ids, offer_id: params[:offer_id])}
  .block_title
    %h2= t(:support_material, scope: [:editions, :items])
  .list_support_materials
    .block_content_toolbar
      .block_toolbar_left.btn-group
        %a.btn.btn_main{href: "#", :"data-dropdown" => "#dropdown_support_material"}
          = content_tag(:i, nil, class: 'icon-plus')
          %i.icon-arrow-down-triangle
        .dropdown.dropdown-tip#dropdown_support_material
          %ul.dropdown-menu
            %li= link_to t(".new_file"), new_support_material_file_path(material_type: Material_Type_File, allocation_tags_ids: @allocation_tags_ids), :"data-box-title" => t(".new_file"), class: 'link_new_material_file'
            %li= link_to t(".new_link"), new_support_material_file_path(material_type: Material_Type_Link, allocation_tags_ids: @allocation_tags_ids), :"data-box-title" => t(".new_link"), class: 'link_new_material_link'

      .block_toolbar_right
        .btn-group
          = link_to (content_tag(:i, nil, class: 'icon-edit')), "#", class: 'btn btn_edit edit_material', :"data-link-edit" => edit_support_material_file_path(':id', allocation_tags_ids: @allocation_tags_ids), "data-edit-title" => t(".edit_link"), disabled: true, :'data-tooltip' => t(".edit")
          = link_to (content_tag(:i, nil, class: 'icon-trash')), "#", class: 'btn btn_del delete_material', :"data-link-delete" => support_material_file_path(':id', allocation_tags_ids: @allocation_tags_ids), disabled: true, :'data-tooltip' => t(".delete")

    - unless @support_materials.empty?
      %table.tb_list
        %thead
          %tr.lines
            %th.center.no_sort{style: 'width: 25px;'}= check_box_tag :all_support_material, false, false, :"data-children-names" => "c_", class: "all_support_material"
            %th.center= t(".title")
            %th{style: 'text-align:left;'}= t(".name")
            %th.center.date= t(".date")
            %th.center= t(".type")

        %tbody
          - @support_materials.each do |material|
            - all_groups = Offer.find(params[:offer_id]).try(:groups) if params.include?(:offer_id)
            %tr.lines{id: "tr_#{material.id}"}
              %td{style: 'text-align:center;'}
                = check_box_tag("c_#{material.id}", material.id, false, {class: "ckb_material", :"data-is-link" => (material.material_type == Material_Type_Link)})
              %td{style: 'text-align:center;  max-width: 400px; overflow: hidden; word-wrap: break-word'}= material.title
              %td
                %div
                  - if material.is_link?
                    %span= image_tag('icon_file_link.png')
                    %span= link_to material.name, material.name, target: '_blank'
                  - else
                    %span= image_tag(icon_attachment(material.name))
                    %span= link_to material.name, download_support_material_file_path(id: material.id)
                  .group_label.invisible= render "groups/groups_tags", groups: material.groups, tool: material, all_groups: all_groups, paths: {add: add_group_to_support_material_files_path(id: "param_id", tool_id: material.id), remove: remove_group_from_support_material_files_path(id: "param_id", tool_id: material.id), unbind: unbind_group_from_support_material_files_path(id: "param_id", tool_id: material.id), tags: group_tags_from_support_material_files_path(tool_id: material.id)}
              %td{style: 'text-align:center;'}
                %div= l(material.attachment_updated_at, format: :normal)
              %td{style: 'text-align:center;'}
                %div= (material.is_link?) ? t(".link") : t(".file")
    - else
      .block_content_text_list.text_none= t(".none")

= javascript_include_tag "tablesorter", "tooltip", "groups_tags"

:javascript

  var div_list = $(".list_support_material");
  var offer_id = "#{escape_once(params[:offer_id])}";

  $(function(){
    $(".link_new_material_file, .link_new_material_link").call_fancybox();

    $(".all_support_material").map(function(){ $(this).nice_checkbox() });

    $('.edit_material').click(function() {
      if ($(this).attr('disabled') == 'disabled'){
        flash_message("#{I18n.t(:choose_one, scope: [:support_materials, :index])}", "alert");
        return false;
      }

      var checked_material = $('.ckb_material:checked', $(this).parents("div.list_support_materials"));
      var material_ids = checked_material.map(function() { return this.value; }).get();
      var file_checked = checked_material.map(function() { return $(this).data("is-link"); }).get();
      if ($.inArray(true, file_checked)) {
        flash_message("#{I18n.t(:must_be_link, scope: [:support_materials, :index])}", "alert");
        return false;
      }
      var url_edit = $(this).data('link-edit').replace(':id', material_ids);
      $(this).call_fancybox({href : url_edit, open: true});

      return false;
    });

    $('.delete_material').click(function(){

      if ($(this).attr('disabled') == 'disabled'){
        flash_message("#{I18n.t(:choose_at_least_one, scope: [:support_materials, :index])}", "alert");
        return false;
      }

      if (!confirm("#{I18n.t(:message_confirm)}"))
        return false;

      if(!$(this).hasClass('disabled')){
        var materials = $('.ckb_material:checked', $(this).parents("div.list_support_material"));
        var materials_ids = materials.map(function() { return this.value; }).get();

        if ($(materials_ids).length != 0){
          $.delete($(this).data('link-delete').replace(':id', materials_ids), function(data){
            flash_message(data.notice, 'notice');
            materials.parents('tr').fadeOut().remove();
          }).error(function(data){
          var data = $.parseJSON(data.responseText);
            if (typeof(data.alert) != "undefined")
              flash_message(data.alert, 'alert');
          })
        }else
          return false;
      }
    });

  });
