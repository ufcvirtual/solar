.new_support_material_form
  = simple_form_for @support_material, html: {id: 'support_material_form', multipart: true} do |f|
    - title = [(f.object.persisted? ? "edit" : "new"), (f.object.is_link? ? "link" : "file")].join("_")

    %h1#lightBoxDialogTitle= t(title, scope: [:support_material_files, :list])
    %span.form_requirement= t(:required_fields)

    = hidden_field_tag :allocation_tags_ids, @allocation_tags_ids
    = f.hidden_field :material_type, value: f.object.material_type

    .form-inputs.block_content
      - if f.object.material_type == Material_Type_Link
        = f.input :url, as: :string, required: true
      - else
        = f.file_field :attachment, required: true

      = render "groups/codes"

      .new_support_material_buttons
        = button_to_function t(:cancel), "jQuery.fancybox.close()", class: "btn btn_default btn_lightbox", type: "button"
        = button_tag t(:save), class: "btn btn_main btn_lightbox", type: "button", id: "save"

:javascript

  jQuery(function($){
    $('#support_material_form:first').keypress(function(event) { if (event.keyCode == 13) { event.preventDefault(); } }); // prevenir enter

    $('#save').click(function(){
      $('#support_material_form:first').serialize_and_submit({
        files: true,
        replace_list: $('.list_support_material:last')
      });
    });
  });
