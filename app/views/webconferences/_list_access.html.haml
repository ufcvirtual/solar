%h1#lightBoxDialogTitle= t('.title', webconference_name: @webconference.title)
- if @webconference.on_going?
  .title-warning= raw t('.on_going')
- elsif !@webconference.over?
  .title-warning= raw t('.not_started')
- if @evaluate || @frequency
  .title-warning= raw t('.evaluation_info')
.webconference_access
  - unless @logs.empty? || @too_old
    %table.tb_list
      %thead
        %tr.lines
          - if (@evaluative || @frequency) && @can_evaluate
            %th=t('chat_rooms.messages.to_evaluate')
          %th{ colspan: 2 }= t('.user')
          %th= t('.group')
          %th= t('.date')
          %th= t('.time')
          - if @evaluative
            %th= t('.grade')
          - if @frequency
            %th= t('.frequency')
      %tbody
        - @logs.each_with_index do |log, idx|
          %tr.lines{id: "log_#{idx}"}
            - if (@evaluative || @frequency)
              %td
                - if log.is_student == 't' 
                  = link_to_function content_tag(:i, nil, class: 'icon-write'), 'evaluate_web(this)', :'data-url' => evaluate_webconference_path(@webconference, log_id: log), class: 'btn evaluate', :'data-tooltip'=> t('.evaluate'), :'data-user-id' => log.user_id
            %td.profile= '(' + log.profile_name + ')'
            %td.user= (@researcher ? t(:hidden_info) : log.user_name)
            %td= AllocationTag.find(log.at_id).info
            %td= l(log.created_at.to_datetime, format: :normal)
            %td= l(log.created_at.to_datetime, format: :clock_time)
            - if @evaluative
              %td.grade{class: "user_#{log.user_id} at_#{log.at_id}"}
                - if @can_evaluate || (log.user_id.to_i == current_user.id)
                  = log.try(:grade)
            -if @frequency
              %td.frequency{class: "user_#{log.user_id} at_#{log.at_id}"}
                - if @can_evaluate || (log.user_id.to_i == current_user.id)
                  = log.try(:wh)
          %tr.lines.evaluative_form.invisible{class: "log_#{idx}"}
            %td{colspan: (@evaluative && @frequency) ? 8 : 7 }
              = simple_form_for :academic_allocation_user, url: evaluate_webconference_path(@webconference), html: { method: :put } do |f|
                = f.input :user_id, as: :hidden, input_html: { value: log.user_id }
                - if @evaluative
                  .left
                    = f.input :grade, as: :numeric, step: 0.01, label: t('.grade'), input_html: { value: log.try(:grade), min: 0, max: 10}
                - if @frequency
                  .middle
                    = f.input :working_hours, as: :numeric, label: t('.working_hours'), input_html: { value: log.try(:wh), min: 0, max: log.try(:max_working_hours), placeholder: t(:info_frequency, scope: [:chat_rooms, :user_messages], wh:log.try(:max_working_hours).to_s )} 
                .right
                  = link_to_function t('.finish_evaluation'), 'finish_evaluation(this)', class: 'btn btn_main'
  - else
    - if @too_old
      .block_content_text_list.text_none= t('.too_old')
    - else
      .block_content_text_list.text_none= t('.no_log')

=javascript_include_tag 'tooltip'

:javascript
  function evaluate_web(icon){
    var tr = $(icon).parents('tr');
    var form = $(tr).siblings('.evaluative_form.'+tr.attr('id'));
    form.slideToggle('slow', function() {
      form.toggleClass('invisible');
    });
  }

  function finish_evaluation(btn){
    var tr = $(btn).parents('tr');
    tr = $('tr#'+tr.attr('class').split(' ').pop());
    var form = $(btn).parents('form:first');

    $.put(form.attr('action'), form.serialize(), function(data){
      evaluate_web(tr.find('.btn.evaluate'));
      if(!!tr.find('td.grade').length)
        var user_at_grade = tr.find('td.grade').attr('class').replace(/\ /g, '.');
      if(!!tr.find('td.frequency').length)
        var user_at_wh = tr.find('td.frequency').attr('class').replace(/\ /g, '.');

      $('.'+user_at_grade).html(form.find('#academic_allocation_user_grade').val());
      $('.'+user_at_wh).html(form.find('#academic_allocation_user_working_hours').val());
      flash_message(data.notice, 'notice', 'fancybox-outer');
    }).error(function(data){
      var data = $.parseJSON(data.responseText);
      if (typeof(data.alert) != "undefined")
        flash_message(data.alert, 'alert', 'fancybox-outer');
    });
  }
