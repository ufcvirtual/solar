.block_wrapper
  - unless @webconferences.blank?
    .block_title
      %h2
        %i.icon-video-conference
        = t(:webconferences, scope: [:webconferences, :list])
    %table.webconferences.tb_list
      %thead
        %tr.lines
          %th.default_width= t(:name, scope: [:webconferences, :list])
          %th.default_width= t(:moderator, scope: [:webconferences, :list])
          %th.default_width= t(:availability, scope: [:webconferences, :list])
          %th.smaller_width= t(:status, scope: [:webconferences, :list])
          %th.smaller_width= t('.user_online')
          %th.smaller_width.no_sort= t('.recording')
          %th.smaller_width= t(:evaluative, scope: [:scores, :index])
          %th.smaller_width= t(:frequency, scope: [:scores, :info])
          - if @can_see_access
            %th.smaller_width.no_sort= t('.access')
          - else
            - if @webconferences.map(&:evaluative).include? 't'
              %th.no_sort= t('.grade')
            - if @webconferences.map(&:frequency).include? 't'
              %th.no_sort= t('.frequency')
      %tbody
        - @webconferences.each do |webconference|
          
          %tr.lines
            %td.webconference_access{ :'data-url' => access_webconference_path(webconference.id, at_id: webconference.at_id) }
              = webconference.on_going? ? link_to_function(webconference.title, 'access_webconference(this)') : webconference.title
              .description
                .minimun= sanitize(truncate webconference.description, length: 100, omission: "#{content_tag(:i, nil, class: 'expand icon-ellipsis', :"data-tooltip" => t(".expand_description"))}")
                .complete.invisible
                  = webconference.description
                  = content_tag(:i, nil, class: "compress icon-arrow-up-triangle", :"data-tooltip" => t(".compress_description"))
              - groups_codes = webconference.groups_codes
              - unless groups_codes.blank? || !webconference.shared_between_groups || groups_codes.size == 1
                %div
                  = raw t('.shared_with', link: link_to(groups_codes.count.to_s, '#', :'data-dropdown' => "#groups_codes_#{webconference.id}"))
                  .dropdown.dropdown-tip{ id: "groups_codes_#{webconference.id}" }
                    %ul.dropdown-menu
                      - groups_codes.each do |code|
                        %li= code
            %td= raw truncate(webconference.moderator.name, length: 20)
            %td
              %div= l(webconference.initial_time.to_date, format: :normal)
              %div= [l(webconference.initial_time.to_time, format: :today), l(webconference.end_hour.to_time, format: :today)].join(' - ')
           
            %td= (@online ? webconference.situation : t(:unavailable, scope: [:webconferences, :list]))
            %td.center= webconference.meeting_info(current_user, webconference.at_id, @meetings)
            %td.center{ class: "#{webconference.situation == t('webconferences.list.record_available') ? '' : 'disabled'}", :'data-tooltip' => t('webconferences.list.watch')}= link_to content_tag(:i, nil, class: 'icon-play btn'), get_record_webconference_path(webconference.id, at_id: webconference.at_id), class: 'record'
            %td.center= t(webconference.evaluative, scope: [:scores, :info])
            %td.center= t(webconference.frequency, scope: [:scores, :info])
            - if @can_see_access
              %td{ :'data-url' => list_access_webconference_path(webconference.id, at_id: webconference.at_id), :'data-tooltip' => t('webconferences.list.access') }= link_to_function content_tag(:i, nil, class: 'icon-users btn'), 'list_access(this)'
            - else
              %td
                - if webconference.evaluative == 't'
                  = webconference.grade
              %td
                - if webconference.frequency == 't'
                  = webconference.working_hours
  - else
    .block_content.block_content_text= t(:no_data, scope: [:webconferences, :list])

= javascript_include_tag 'tooltip', 'webconferences' 

:javascript
  $(function(){
    $('.record').call_fancybox();
  });