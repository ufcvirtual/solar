- evaluate = ((@academic_allocation.evaluative || @academic_allocation.frequency) && @can_evaluate)
.user_posts
  %h1#lightBoxDialogTitle= t(".title", user: @user.name, discussion: @discussion.name)
  - if evaluate
    .title-warning= raw t('.evaluation_info')
  - unless @posts.empty?
    %table.tb_list
      %thead
        %tr.lines
          %th= t(".message")
          %th.center= t(".date")
          %th.center= t(".time")
      %tbody
        - @posts.each do |post|
          %tr.lines
            %td.profile= sanitize post.content
            %td.center= l(post.updated_at.to_datetime, format: :normal)
            %td.center= l(post.updated_at.to_datetime, format: :clock_time)

  - else
    .block_content_text_list.text_none= t(".no_posts")
  
  - if evaluate && @user.is_student?(@allocation_tags)
    = simple_form_for :academic_allocation_user, url: evaluate_discussion_path(@discussion), html: { method: :put } do |f|
    
      = f.input :user_id, as: :hidden, input_html: { value: @user.id }
      = f.input :score_type, as: :hidden,  input_html: { value: @score_type }
      .form-inputs.block_content
        .inline
          - if @academic_allocation.evaluative
            = f.input :grade, required: true, as: :float, step: 0.01, label: t(".grade"), input_html: { value: @alluser.try(:grade), min:0, max:10 } 
          -  if @academic_allocation.frequency  
            = f.input :working_hours, required: true, as: :float, label: t(".frequency"), input_html: { value: @alluser.try(:working_hours), min:0, max: @academic_allocation.max_working_hours, placeholder: t(:info_frequency, scope: [:chat_rooms, :user_messages], wh:@academic_allocation.max_working_hours.to_s ) }
          = link_to_function t(:save), 'finish_evaluation(this)', class: 'btn btn_main'


:javascript
  function finish_evaluation(btn){
    var form = $(btn).parents('form:first');
    $.put(form.attr('action'), form.serialize(), function(data){
      jQuery.fancybox.close();
      scoreType = "#{@score_type}";
      id_elem = "#{@academic_allocation.id}_#{@user.id}";
      if(scoreType=='evaluative')
        grade = $('#academic_allocation_user_grade').val();
      else
        grade = $('#academic_allocation_user_working_hours').val();  
      grad_ = $.isNumeric(grade) ? grade : data.situation;
      
      $('a#'+id_elem).text(grad_);
      var td = $('a#'+id_elem).closest('td');
      td.attr( "class", data.class_td);
      td.addClass("Discussion");

      flash_message(data.notice, 'notice');
    }).error(function(data){
      var data = $.parseJSON(data.responseText);
      if (typeof(data.alert) != "undefined")
        flash_message(data.alert, 'alert', 'fancybox-outer');
    });
  }
