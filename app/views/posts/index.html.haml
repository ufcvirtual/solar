.block_wrapper#forum_description
  %h2
    .block_title
      %i.icon-forum
      = @discussion.name
  .block_content
    .block_content_text= sanitize @discussion.description

  %h2
    .block_title
      %i.icon-forum
      = t('.files.discussion_file_title')
  .block_content
    .block_content_text
      = sanitize @discussion.description
      %p
        - unless @files.empty?
          %ul
            .title= t('.files.discussion_file_title')
            - @files.each do |file|
              - size = format('%.2f KB', file.attachment_file_size/1024.0)
              %li
                - link = discussion_download_path(id: file.id)
                = link_to image_tag(icon_attachment(file.attachment_file_name)), link, {class: "file_icon", :'aria-label'=> t('posts.post.download', file: file.attachment_file_name, size: size)}
                = link_to file.attachment_file_name.truncate(30), link, {class: "link_content", :'aria-label'=> t('posts.post.download', file: file.attachment_file_name, size: size)}
                = size

  .expand_hide
    = link_to content_tag(:i, nil, class: 'icon-resize-enlarge', :"data-tooltip" => t('.expand')), "#void", onclick: 'show_all()'
    .expand_link= link_to t('.expand'), "#void", onclick: 'show_all()'
    = link_to content_tag(:i, nil, class: 'icon-resize-shrink', :"data-tooltip" => t('.compress')), "#void", onclick: 'hide_all()'
    .compress_link= link_to t('.compress'), "#void", onclick: 'hide_all()'

  .posts
    = content_tag(:i, nil, class: 'icon-pluscircle.png')
    .block_title.forum_navigation
      %span#forum_new_message
        - if @can_interact
          - if @can_post
            = button_tag(type: 'button', onclick: "javascript:new_post(this);", class: 'btn btn_main', id: 'button_new_post', :'data-tooltip' => t(:forum_new_message), :'aria-label'=> t(:forum_new_message), :'data-shortcut' => t("shortcut.discussion.code.new"), :'data-shortcut-name' => t("shortcut.discussion.name.new")) do
              = content_tag(:i, nil, class: 'icon-edit')
        - else
          #forum_closed= t("forum_closed")
        - unless @acu.blank?
          - comments = @acu.try(:comments).count rescue 0
          = button_tag content_tag(:i, nil, class: 'icon-comment'), :'data-url' => summary_discussions_path(tool_id: @discussion.id, ac_id: @academic_allocation.id), class: "btn #{comments > 0 ? 'btn_main' : ''}", :'data-tooltip' => t('comments.summary.count', count: comments), :'aria-label' => t('comments.summary.count_alt', count: comments) + t('fancybox.open'), onkeydown: 'click_on_keypress(event, this);', :'data-shortcut'=> t("shortcut.comments.code.title"), :'data-shortcut-name'=> t("shortcut.comments.name.title"), onclick: 'open_summary(this)'

      %span#forum_view_mode
        - class_l = (@display_mode == 'list') ? 'btn_pressed' : 'btn_default'
        - class_t = (@display_mode == 'tree') ? 'btn_pressed' : 'btn_default'
        - class_u = (@display_mode == 'user') ? 'btn_pressed' : 'btn_default'

        .btn-group
          = link_to content_tag(:i, nil, class: 'icon-list'), discussion_posts_path(@discussion, {display_mode: 'list'}), {class: "btn #{class_l}", id: 'forum_view_mode-list', :"data-tooltip" => t(".show_plainlist"), :"aria-label" => t(".show_plainlist"), :'data-shortcut' => t("shortcut.discussion.code.list"), :'data-shortcut-name' => t("shortcut.discussion.name.list")}
          = link_to content_tag(:i, nil, class: 'icon-flow-cascade'), discussion_posts_path(@discussion, {display_mode: 'tree'}), {class: "btn #{class_t}", id: 'forum_view_mode-thread', :"data-tooltip" => t(".show_thread"), :'aria-label' => t(".show_thread"), :'data-shortcut' => t("shortcut.discussion.code.thread"), :'data-shortcut-name' => t("shortcut.discussion.name.thread")}
          = link_to content_tag(:i, nil, class: 'icon-user'), discussion_posts_path(@discussion, {display_mode: 'user'}), {class: "btn #{class_u}", id: 'forum_view_mode-user', :"data-tooltip" => t(".show_my_post"), :'aria-label' => t(".show_my_post"), :'data-shortcut' => t("shortcut.discussion.code.discussion"), :'data-shortcut-name' => t("shortcut.discussion.name.discussion")}

      #forum_pagination
        = page_entries_info @posts, model: Post
        = will_paginate @posts
      .new_posts
        #new_post
          = simple_form_for(@post, html: { id: 'new_post_form', :'action-to-edit' => discussion_post_path(@discussion.id, ':id'), :"action-default" => discussion_posts_path(@discussion.id), method: :put, multipart: true }) do |form|
            = form.hidden_field(:parent_id,  value: '', id: 'discussion_post_parent_id')
            = form.hidden_field(:display_mode, value: @display_mode, id: 'display_mode_1')
            = form.hidden_field(:current_page, value: @current_page, id: 'current_page_1')
            = form.text_area(:content)

            = render partial: 'extra_tools/speech2text', locals: {class_name: 'left', ckeditor: true, div_id: 'post_content', number: '', field: ''}

            = button_tag content_tag(:i, nil, class: 'icon-paperclip'), class: 'btn', id: 'post_new_file', :'data-tooltip'=> t('posts.post.attach_file'), :'aria-label'=> t('posts.post.attach_file')
            = button_tag t('.save_draft'), class: "btn", id: "submit_post_draft", type: :button, :'data-tooltip' => raw(t('posts.post.fv_explain')), :'aria-label'=> t('.save_draft') + raw(t('posts.post.fv_explain_alt')), :'data-draft' => true


            .new_post_dialog_buttons.btn-group
              = button_tag content_tag(:span, t(:cancel)), type: 'button', onclick: "cancel_posting(this)", class: 'btn btn_caution', id: 'btn_cancel_post'
              = button_tag t('.publish'), class: "btn btn_main submit_post", id: "submit_post", type: :button, :'data-draft' => false


            #form_attached
              = form.simple_fields_for :files do |files|
                .file_input
                  = files.input :_destroy, as: :hidden, input_html: { value: 0, class: "destroy_input_file", :"data-file-id" => files.object.id }
                  = files.input :attachment, label: false, input_html: { id: 'fileupload', class: 'hidden_input_file' }

              %br
              %br
              %h3.attachment_title_.invisible= t("posts.post.file_list")
              .input.list_files_to_send_
                - @post.files.each do |file|
                  - if file.persisted?
                    .input.files
                      %label
                      %span#file{:"data-file-id" => file.id}
                        %span{ tabindex: "0" }= file.attachment_file_name
                        %i.icon-cross-square.warning.remove_file{ tabindex: "0" }

      .forum_post_new

    .forum_posts_wrapper
      - @hash = { } unless @display_mode == 'list'
      - @posts = get_page_posts(@posts, @current_page) unless @display_mode == 'list'
      - @posts.each do |post|
        = render partial: 'post', locals: { post: post, display_mode: @display_mode, can_interact: @can_interact, can_post: @can_post, current_user: @user, new_post: false, number: '', comments: (@acu.try(:comments).count rescue nil)}

.block_wrapper
  = link_to t(:back), :back, class: 'btn' , id: 'back', :'aria-label' => t(:back)

#fv_explain.invisible
  %h1= t('posts.post.draft2')
  .form-inputs.block_content
    = raw t('posts.post.fv_explain')


= javascript_include_tag 'ckeditor/init', 'discussions', 'contextual_help/discussion_posts', 'audios', 'pagination', 'tooltip', 'academic_allocation_user'

:javascript

  var locale = "#{I18n.locale}";
  var ws;

  $("#button_new_post").focus();

  $(function(){
    $('.draft_version_explain').call_fancybox({
      'maxWidth': '700px',
      content: $('#fv_explain').html()
    });

    $('a').not(".draft_version_explain, .update_post, .btn_caution, .forum_button_attachment, .response_post, .dropdown-open, .close_dropdown, #mysolar_top_user_nick, #accessibility_top, #help_top, .link-arrow, #shortcut_accesskey").click(function(){
      if( typeof(CKEDITOR) !== "undefined" && CKEDITOR != undefined && CKEDITOR.instances['post_content'] !== undefined ){
        try{
          var content = CKEDITOR.instances["post_content"].getData();
        } catch(exception){
          var content = $('#post_content').val();
        }
        if(content){
          if (typeof($("#submit_post_draft")) !== "undefined" && $("#submit_post_draft").is(":visible")){
            if (window.confirm("#{t('posts.create.save_draft')}"))
              $("#submit_post_draft").click();
          }else{
            if (typeof($("#submit_post")) !== "undefined" && $("#submit_post").is(":visible")){
              if (window.confirm("#{t('posts.create.save_post')}"))
                $("#submit_post").click();
            }
          }
        }
      }
    });

    CKEDITOR_BASEPATH  = "#{request.env['RAILS_RELATIVE_URL_ROOT']}/assets/ckeditor/";

    var websocket_host = "#{YAML::load(File.open("config/global.yml"))[Rails.env.to_s]["websocket"]["host"]}";
    var websocket_port = "#{YAML::load(File.open("config/global.yml"))[Rails.env.to_s]["websocket"]["port"]}";

    $(".forum_button_attachment").call_fancybox({
      element_selector: '.focu'
    });

    var display_list = ("#{escape_once(@display_mode) == 'list'}" == "true");
    var ac = "#{@academic_allocation.id}";

    if(display_list==false){
      var text = "#{t('.primary')} ";
      if($('#forum_pagination').children("b").length==2){
        var b = $('#forum_pagination').children("b")[0];
        $(b).html(text + $(b).text());
        var b1 = $('#forum_pagination').children("b")[1];
        $(b1).html($(b1).text()+text);
      }else{
        var b = $('#forum_pagination').text().split(".");
        $('#forum_pagination').html(b[0] + "#{t('.primary')}.");
      }
    }

    /*Conex√£o com o WebSocket*/
    ws = new WebSocket('ws://'+websocket_host+':'+websocket_port+'/'+ac); // file websocket_server.rb
    ws.onopen = function (){ }; // ao iniciar ws
    ws.onclose = function () { }; // ao perder conex√£o com o ws
    ws.onerror = function (err) { }; // ao receber erro no ws

    // new messages
     ws.onmessage = function (msg) {
      var data = JSON.parse(msg.data);
      var post_table   = $("article#"+data.post_id);
      var parent_table = $("article#"+data.parent_id);
      // recover grandparent if has parent, but it doesn't exists at view (so it must render all tree of posts) and isn't list view and it is at first page
      var grandparent  = (data.parent_id != null && !parent_table.length && !display_list && (1 == parseInt("#{escape_once(@current_page)}")));

      $.get("#{discussion_post_path(@discussion.id, ':id', researcher: @researcher)}".replace(':id', data.post_id), {new_post: true, grandparent: grandparent}, function(data2){
        if (!!post_table.length) // if post exists
          post_table.html(data2);
        else
          if (!!parent_table.length && !display_list){ // if has parent and isn't list view
            $(parent_table.find("._cell.forum_post_content .forum_post_wrapper")[0]).after(data2);
            parent_table.find(".forum_post_buttons:first").find(".update_post:first, .forum_button_attachment:first, .btn_caution:first").remove();
          }else // if hasn't parent and is at the same page or is list view
            if (data.parent_id == null && (1 == parseInt("#{escape_once(@current_page)}")) || !!display_list || !!grandparent)
              $(".forum_posts_wrapper").prepend(data2);

        add_post_count_warning("#{escape_once(@current_page)}");
      });
    }

    $("#submit_post, #submit_post_draft").click(function(){
      var form    = $($(this).parents("form")[0]);
      try{
        var content = CKEDITOR.instances["post_content"].getData();
      } catch(exception){
        var content = $('#post_content').val().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
        content = '<p>'+content+'</p>';
      }

      // get parent_id information
      if (form.attr("method") == "POST")
        var parent_table = $($(this).parents("article")[0]);
      if (parent_table == undefined)
        var parent_id = null;
      else
        var parent_id = parent_table.attr("id");

      var draft = $(this).data('draft');

      var formElement = document.querySelector("form");
      var formData = new FormData(formElement);
      formData.append("post[content]", content);
      formData.append("post[draft]", draft);
     // if(parent_id !== "undefined")
       // formData.append("post[parent_id]", parent_id);

      //{discussion_post: {parent_id: parent_id, content: content, draft: draft}}
      $.ajax({
        type: form.attr("method"),
        url: form.attr("action"),
        data: formData,
        cache: false,
        contentType: false,
        processData: false,
        success: function(data){
          remove_ckeditor(); // remove ckeditor options

          $.get("#{discussion_post_path(@discussion.id, ':id')}".replace(':id', data.post_id), {can_post: "#{@can_post}"}, function(data2){
            var post_table = $("article#"+data.post_id);
            if (!!post_table.length){
              post_table.html(data2);
              msg = (draft ? "#{t('posts.update.draft')}": "#{t('posts.update.updated')}");
            }else{
              if (parent_table != undefined && !!parent_table.length && !display_list){
                $(parent_table.find("._cell.forum_post_content .forum_post_wrapper")[0]).after(data2);
                parent_table.find(".forum_post_buttons:first").find(".update_post:first, .forum_button_attachment:first, .btn_caution:first").remove();
              }else
                $(".forum_posts_wrapper").prepend(data2);
              msg = (draft ? "#{t('posts.create.draft')}" : "#{t('posts.create.created')}");
            }
            $(".forum_button_attachment").call_fancybox({
              afterShow: function(){
                $('.focu').attr("tabindex", "0");
                $('.focu').focus();
              }
            });
            add_post_count_warning();
            flash_message(msg, "notice");
          });

          // only send message if is a new post
          if (form.attr("method") == "POST" && !draft)
            ws.send(JSON.stringify({
              msg: content,
              post_id: data.post_id,
              parent_id: data.parent_id,
              academic_allocation_id: ac
            }));
          loadFocus();
        },
        error: function(data){
          var data = $.parseJSON(data.responseText);
          if (typeof(data.alert) != "undefined")
            flash_message(data.alert, 'alert');
          else{
            var msg = (draft ? "#{t('posts.create.not_draft')}" :  "#{t('posts.create.not_created')}");
            flash_message(msg, "alert");
          }
        }
      });
    });

    //files
    if (!!$(".list_files_to_send_").children().length)
      $(".attachment_title_").removeClass("invisible");

    if ($(".file_input:last").length)
      var nested_form = $(".file_input:first", $('.posts'));

    function add_new_file() {

      var new_form = nested_form.clone();

      var forms_on_page = $(".file_input", $('.posts')).length;
      var input_name = $("input[type='file']", new_form).attr("name");

      input_name = input_name.replace(new RegExp(/\[[0-9]+\]/), "[" + forms_on_page + "]");

      $("input", new_form).attr("name", input_name);

      $(new_form).insertAfter( nested_form.last() );
      $("input[type='file']", new_form).click();
      $(".attachment_title_", $('.posts')).removeClass("invisible");
      $(".attachment_title_").show();

      $("input[type='file']", new_form).change(function(){

        var text_aria_label = "#{I18n.t('posts.post.remove_file')}"+': ' + this.files[0].name + ' ' +humanFileSize(this.files[0].size);

        var new_file_name = "<div class='input files'> <label></label> <span id='file' data-input-file-name=" + input_name + ">" + this.files[0].name + "<i class='icon-cross-square warning remove_file' tabindex= '0' aria-label= '"+text_aria_label+"' data-tooltip= '"+text_aria_label+"' ></i> </span> </div>";

        if ($(".list_files_to_send_ .files:last").lenght)
          $(".list_files_to_send_ .files:last").after(new_file_name);
        else
          $(".list_files_to_send_").append(new_file_name);

        $(".remove_file", $('.posts')).on("click keypress", function(event){
          var keynum = event.which || event.keyCode;

          if( keynum == 13 || event.type == 'click'){
            var span_file = $(this).parents('span#file');

            $("[name='" + span_file.data("input-file-name") + "']").parents("div.file_input").remove();
            $(span_file).parents('div.input.files').remove();

            if (!$(".list_files_to_send_").children().length)
              $(".attachment_title_").addClass("invisible");
          }
        });
      });
    }

    $(".remove_file").on("click keypress", function(event){
      var keynum = event.which || event.keyCode;
      if( keynum == 13 || event.type == 'click') {
        var span_file = $(this).parents('span#file');

        $("[name='" + span_file.data("input-file-name") + "']").parents("div.file_input").remove(); // pra edicao nao serve
        $("input[data-file-id=" + span_file.data("file-id") + "]").val(1); // edicao: colocar o _destroy com valor 1
        $(span_file).parents('div.input.files').remove();

        if (!$(".list_files_to_send_").children().length)
          $(".attachment_title_").addClass("invisible");
      }
    });
    $("#post_new_file").click(function(e){
      e.preventDefault();
      add_new_file();
    });

  });


  function publish_post(btn){
    $.put($(btn).data('url'), {draft: false}, function(data){
      $.get("#{discussion_post_path(discussion_id: ':discussion_id', id: ':id') }".replace(':discussion_id',data.discussion_id).replace(':id',data.post_id), function(data2){
        $(btn).parents('article:first').replaceWith(data2);
        flash_message("#{t('posts.create.published')}", 'notice');
        ws.send(JSON.stringify({
          msg: data.content,
          post_id: data.post_id,
          parent_id: data.parent_id,
          academic_allocation_id: data.ac_id
        }));
      }).error(function(){
        flash_message("#{t('posts.error.not_published')}", 'alert');
      });
    });
  }

<<<<<<< d98352d1404a2540cd6815f3f3cae4622e0120aa
=======
  function show_all(){
    $('.forum_posts_wrapper').find('.link-show').click();
  }

  function hide_all(){
    $('.forum_posts_wrapper').find('.link-hide').click();
  }
>>>>>>> [#155902890] Permitindo Comprimir e Expandir todos os Posts n√£o prim√°rios
