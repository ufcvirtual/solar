- user, new_post_class = post.user, ((new_post && new_post.to_i == post.id) ? "new" : "")
- children = ((display_mode == 'list') ? post.children : Post.reorder_by_latest_posts(post.children)) # obtendo e reordenando os posts a partir dos seus "filhos/netos"
- editable = ((post.user_id == current_user.id) && (post.children_count == 0))
- files    = post.files
- evaluate = @can_evaluate || ((post.user_id == current_user.id) && @academic_allocation.try(:evaluative))
- frequency = @can_evaluate || ((post.user_id == current_user.id) && @academic_allocation.try(:frequency))
%article._post.forum_post{ border: '0', cellpadding: '0', cellspacing: '0', id: "#{post.id}" }
  ._line
    ._cell.forum_post_icon{class: new_post_class }
      = (@researcher ? image_tag('no_image.png', size: '40x40') : image_tag(user.user_photo(:forum), size: '40x40', alt: t(:mysolar_alt_img_user) + ' ' + user.nick))
    %li._cell.forum_post_head{class: new_post_class}
      .forum_post_author
        .forum_participant_nick{ alt: "#{user.info(:nick, @researcher)}" }
          = user.info(:nick, @researcher) 
          - unless @class_participants.include? user.id
            %span{ :"data-tooltip" => t('.moved_allocation') }= content_tag :i, nil, class: 'icon-warning moved_allocation',  :'aria-label'=> t('.moved_allocation')
          - if evaluate || frequency
            - info = AcademicAllocationUser.get_grade_and_wh(post.user_id, 'Discussion', post.discussion.id)
            - if evaluate && !info[:grade].blank?
              = t(:grade, scope: [:posts, :post], grade: info[:grade])
            - if frequency && !info[:wh].blank?
              = t(:frequency, scope: [:posts, :post], wh: info[:wh])
   
        .forum_participant_profile= (profile = post.profile).nil? ? '' : profile.name
      .forum_post_date
        = l(post.updated_at, format: :discussion_post_date)
        = l(post.updated_at, format: :discussion_post_hour)
  ._line
    ._cell.forum_post_icon
    ._cell.forum_post_content
      .forum_post_wrapper{ class: new_post_class }
        %span.hide.number_post=post.parent_id
        .forum_post_inner_content
          = sanitize post.content
          
        .forum_post_attachment{id: "ul_#{post.id}"}
          - if files.any?
            = render partial: 'file_post', locals: { post: post, files: files, editable: editable, can_interact: can_interact}

        .forum_post_buttons
          .btn-group
            %ul
              - if @can_evaluate && (post.profile.types & Profile_Type_Student) > 0
                %li= link_to content_tag(:i, nil, class: 'icon-write'), user_discussion_posts_path(post.discussion.id, post.user_id), class: 'btn to_evaluate_post', :'data-tooltip'=> t('.to_evaluate'), :'aria-label' => t('.to_evaluate') + t('fancybox.open'), onkeydown: 'click_on_keypress(event, this);'
              - if can_interact
                - if editable
                  %li= link_to content_tag(:i, nil, class: 'icon-paperclip'), new_post_post_file_path(post), class: 'btn forum_button_attachment', :'data-tooltip'=> t('.attach_file'), :'aria-label'=> t('.attach_file') + t('fancybox.open')
                  - path = discussion_post_path(post.discussion, post)
                  %li= link_to_function content_tag(:i, nil, class: 'icon-trash'), 'delete_post(this)', class: 'btn btn_caution', :'data-url' => path, :'data-post' => post.id, :'data-tooltip'=> t('.remove'), :'aria-label'=> t('.remove'), onkeydown: 'click_on_keypress(event, this);'
                  %li= link_to_function content_tag(:i, nil, class: 'icon-edit'), "update_post(this, #{post.id}, #{post.parent_id || 0})", class: 'btn update_post', :'data-tooltip'=> t('.edit'), :'aria-label'=> t('.edit'), onkeydown: 'click_on_keypress(event, this);'
                - if post.can_be_answered? && can_post
                  %li= link_to_function content_tag(:i, nil, class: 'icon-reply'), "new_post(this, #{post.id});", class: 'btn response_post', level: post.level, :'data-tooltip'=> t('.answer'), :'aria-label'=> t('.answer'), onkeydown: 'click_on_keypress(event, this);'
              - else
                - if editable
                  %li= button_tag content_tag(:i, nil, class: 'icon-paperclip'), class: 'btn btn_disabled', disabled: true, :'data-tooltip'=> t('.attach_file'), :'aria-label'=> t('.attach_file')
                  %li= button_tag content_tag(:i, nil, class: 'icon-trash'), class: 'btn btn_disabled', disabled: true, :'data-tooltip'=> t('.remove'), :'aria-label'=> t('.remove')
                  %li= button_tag content_tag(:i, nil, class: 'icon-edit'), class: 'btn btn_disabled', disabled: true, :'data-tooltip'=> t('.edit'), :'aria-label'=> t('.edit')
                - if post.can_be_answered? && can_post
                  %li= button_tag content_tag(:i, nil, class: 'icon-reply'), class: 'btn btn_disabled', disabled: true, :'data-tooltip'=> t('.answer'), :'aria-label'=> t('.answer')
        .forum_post_reply
      - unless display_mode == 'list'
        - children.each do |child|
          = render partial: 'post', locals: { post: child, display_mode: display_mode, can_interact: can_interact, can_post: can_post, current_user: current_user, new_post: new_post }
  ._line

:javascript
  $(function(){
    $("table .new").click(function(){
      $($(this).closest("table")).find(".forum_post_wrapper, .forum_post_head, .forum_post_icon").each(function(){$($(this)[0]).removeClass("new")});
      add_post_count_warning();
    });
  });
  
  $(".to_evaluate_post").call_fancybox({
    minWidth: '50%',
    minHeight: '50%',
    height: 'auto',
    closeBtn : true
  });

  $('.number_post').each(function(index){
    var indice = index+1;
    $(this).attr("id", "span_"+ indice);
    parent_id = $(this).html();
    label = indice+"#{t('.post')}";
    display_mode = "#{display_mode}";
    if(parent_id && $("#"+parent_id).length && display_mode != 'list'){
      var elemento = $("#"+parent_id).find('.number_post');
      id_pai = $(elemento).attr('id');
      var id_pai = id_pai.replace(/[^0-9]/g,'');
      id_pai = parseInt(id_pai);
      label = label +"#{t('.answer_post')}"+ id_pai+"#{t('.res_post')}";
      $(this).attr("aria-label", label);
    }else{      
      $(this).attr("aria-label", label);
    }
  }); 
