.block_wrapper.messages

  = render "header"

  .block_white.index
    .align-left.padding-checkbox
      %span.views#dropdown_messages{role: 'menubar'}
        %a.btn.btn_dropdown{ href: '#', :"data-dropdown" => '#views-dropdown' }
          = t('.view_messages', type: t('messages.select_all'))
          %i.icon-arrow-down-triangle{:'aria-hidden' => 'true'}
        .dropdown.dropdown-tip#views-dropdown
          %ul.dropdown-menu
            %li{role: 'menuitem'}= link_to t('messages.select_all'), '#void', class: 'selected all', id: "all", :'data-search-for'=>'all', onclick: 'change_messages_view(this);', onkeydown: 'click_on_keypress(event, this);', :'data-shortcut' => t("shortcut.message.code.all"), :'data-shortcut-name' => t("shortcut.message.name.all"), :'data-url' => anybox_messages_path(page: 1, box: 'box_value', subject: 'subject_value', user: 'user_value')
            %li{role: 'menuitem'}= link_to t('messages.select_read'), '#void', class: 'reads', id: "reads", :'data-search-for'=>'only_read', onclick: 'change_messages_view(this);', onkeydown: 'click_on_keypress(event, this);', :'data-shortcut' => t("shortcut.message.code.reads"), :'data-shortcut-name' => t("shortcut.message.name.reads"), :'data-url' => anybox_messages_path(page: 1, box: 'box_value', subject: 'subject_value', user: 'user_value', search_for: 'only_read')
            %li{role: 'menuitem'}= link_to t('messages.select_unread'), '#void', class: 'unreads', id: "unreads",  :'data-search-for'=>'only_unread',onclick: 'change_messages_view(this);', onkeydown: 'click_on_keypress(event, this);', :'data-shortcut' => t("shortcut.message.code.unreads"), :'data-shortcut-name' => t("shortcut.message.name.unreads"), :'data-url' => anybox_messages_path(page: 1, box: 'box_value', subject: 'subject_value', user: 'user_value', search_for: 'only_unread')

    .align-middle.search_messages
      .hide_label#search_box_accesskey
        = label_tag :subject, t('.placeholder_subject')
        = text_field_tag :subject, nil, placeholder: t('.placeholder_subject'), class: "search_box_focus"
      .hide_label
        = label_tag :user, t('.placeholder_user')
        = text_field_tag :user, nil, placeholder: t('.placeholder_user')
      = link_to (content_tag(:i, nil, class: 'icon-search')), '#void', class: 'btn', :'data-tooltip' => t('.search'), id: 'search_messages', :'data-url' => search_messages_path, :'aria-label' => t('.search')

    .align-right.btn-group
      %ul
        %li= link_to content_tag(:i, nil, class: 'icon-plus', :'aria-hidden' => 'true'), '#void', class: "btn btn_main", id: "button_new_msg", :"data-tooltip" => t('messages.new'), :'aria-label' => t('messages.new'), :'data-shortcut' => t("shortcut.message.code.new"), :'data-shortcut-name' => t("shortcut.message.name.new"), :'data-url' => new_message_path
        - unless ['trashbox', 'outbox'].include?(@box)
          %li.only-inbox= link_to content_tag(:i, nil, class: 'icon-mail', :'aria-hidden' => 'true'), '#void', class: 'btn', id: 'mark_as_unread', :'data-tooltip' => t(:mark_as_unread, scope: :messages), :"data-new-status" => 'unread', :"data-link-udpate-status" => change_status_message_path(id: ':id', new_status: 'unread', box: 'box_value', page: 1) , onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t(:mark_as_unread, scope: :messages)
          %li.only-inbox= link_to content_tag(:i, nil, class: 'icon-mail-read', :'aria-hidden' => 'true'), '#void', class: 'btn', id: 'mark_as_read',:"data-tooltip" => t(:mark_as_read, scope: :messages), :"data-new-status" => 'read', :"data-link-udpate-status" => change_status_message_path(id: ':id', new_status: 'read', box: 'box_value', page: 1), onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t(:mark_as_read, scope: :messages)
        %li.except-trash= link_to content_tag(:i, nil, class: 'icon-trash', :'aria-hidden' => 'true'), '#void', class: 'btn remove_btn', id: 'remove_message', :"data-tooltip" => t(:delete, scope: :messages), :"data-new-status" => 'trash', :"data-link-udpate-status" => change_status_message_path(id: ':id', new_status: 'trash', box: 'box_value', page: 1), onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t(:delete, scope: :messages)
        %li.only-trash= link_to content_tag(:i, nil, class: 'icon-restore', :'aria-hidden' => 'true'), '#void', id: 'restore_message', class: 'btn', :"data-tooltip" => t(:restore, scope: :messages), :"data-new-status" => 'restore', :"data-link-udpate-status" => change_status_message_path(id: ':id', new_status: 'restore', box: 'box_value', page: 1), onkeydown: 'click_on_keypress(event, this);', :'aria-label' => t(:restore, scope: :messages)

  .messages_list
    = render partial: 'list'

= javascript_include_tag 'messages'

:javascript

  $(function(){
    function search_messages(){
      $.get($('#search_messages').data('url'), { subject: $('#subject').val(), user: $('#user').val(), box: $('.message_general_div_option_active:first').find('a').prop('id'), search_for: $('.views .dropdown ul li a.selected').data('search-for') }, function(data){
        $('.messages_list').html(data);
        if(!!$('table').length){
          $('#ckb_all').nice_checkbox();
          focus_element($('table'));
        }
        else
          focus_element($('.text_none.empty_message'));
      });
    }

    $('#button_new_msg').on('click', function(){
      $.get($(this).data('url'), function(data){
        $('.block_white.index').hide();
        $('.messages_list').html(data);
      });
    });

    $('input#user, input#subject').keyup(function(e) {
      if (e.keyCode == 13) { // when pressend enter
        search_messages();
        return false;
      }
    });

    $('#search_messages').click(function(){
      search_messages();
    });

    $('#ckb_all').nice_checkbox();

    $('a#mark_as_read, a#mark_as_unread, a#remove_message, a#restore_message').click(function(){
      var link = $(this);

      if($(this).hasClass('remove_btn')){
        if(!confirm("#{t(:message_confirm)}"))
          return false;
      }

      var message_ids = selected_messages();
      if (!message_ids.length)
        return false;

      var url = $(this).data('link-udpate-status').replace(':id', message_ids).replace('box_value', $('.message_general_div_option_active:first').find('a').prop('id'));
      var new_status = $(this).data('new-status');
      var msgs = $('[type=checkbox]:checked.selected_messages');

      $.put(url, function(response){
        if ($.inArray(new_status, ['trash', 'restore']) != -1) // comportamento diferente
          msgs.parents('tr').fadeOut(500, function(){ $(this).remove(); update_tables_with_no_data(); });
        else {
          var links = $('.td_subject a', msgs.parents('tr'));
          if (new_status == "read")
            links.addClass('message_read').removeClass('message_unread');
          else
            links.addClass('message_unread').removeClass('message_read');
          update_tables_with_no_data();
        }
      }).complete(function(){
        // contar msgs da caixa de entrada
        $.get("#{count_unread_messages_path}", function(data){
          $('span#count_msgs_unread').html(['(', data.unread, ')'].join(''));

          switch($(link).prop('id')) {
            case 'mark_as_read':
              flash_message("#{t('.read_success')}", 'notice');
              break;
            case 'mark_as_unread':
              flash_message("#{t('.unread_success')}", 'notice');
              break;
            case 'remove_message':
              flash_message("#{t('.remove_success')}", 'notice');
              break;
            case 'restore_message':
              flash_message("#{t('.restore_success')}", 'notice');
              break;
          }

        });
      });
    });

    $("#dropdown_messages .btn_dropdown").on("keydown", function(event){
      var keynum = event.which || event.keyCode;

      if( keynum == 13 || keynum == 32 || keynum == 40 || event.type == 'click') {
        $(this).trigger('click');
        setTimeout(function() {
          $("#views-dropdown").find("li:first").find("a").focus();
        }, 100);
      }
    });

    $("#views-dropdown .dropdown-menu li a").on("keydown", function(event){
      var keynum = event.which || event.keyCode;

      switch( keynum ) {
        case 40:
          $(this).closest("li").next("li").find("a").focus();
          break;
        case 38:
          $(this).closest("li").prev("li").find("a").focus();
          break;
        case 27:
          $(this).closest("#dropdown_messages").find(".btn_dropdown").click().focus();
          break;
      }
    });

    focus_element_time('#flash_message_span');
  });
