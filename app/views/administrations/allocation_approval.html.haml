.block_wrapper.allocation_requested_list
  .title-warning= t(".page_info", url: link_to(t(".user_indication").html_safe, "/administrations/indication_users_specific")).html_safe
  .block_title{style: "height:0"}
  .block_content_toolbar
    .block_toolbar_left
      = select_tag "type_search", options_for_select(@types, @type_search)
      = text_field_tag "text_search", @text_search
      = button_tag t(:search, scope: [:administrations, :users]), type: :button, class: "btn btn_default", id: "search_allocation", :"data-link" => search_allocation_administrations_path
  .block_content
    - unless @allocations.empty?
      %table.tb_list
        %thead
          %tr.lines
            %th{style: "width: 11%"}= t(".nome")
            %th= t(".profile")
            %th= t(".type")
            %th= t(".course")
            %th= t(".curriculum_unit")
            %th= t(".semester")
            %th= t(".group")
            %th.no_sort{style: "width: 11%"}
        %tbody.allocations
          = render partial: 'pending_allocations', locals: { allocations: @allocations }
      = link_to content_tag(:i, nil, class: "icon-ellipsis"), search_allocation_administrations_path(page: @allocations.next_page, type: @type_search, value: @text_search), class: 'load-more-allocations', remote: true, :"data-tooltip" => t(:load_items) if @allocations.next_page
    - else
      .block_content_text_list.text_none= t(".none_pending_allocation")

:javascript
  $(function(){

    $('.allocation_requested_list input#text_search').keyup(function(e) {
      if (e.keyCode == 13) { // when pressend enter
          $("#search_allocation").click();
          return false;
      }
    });

    $("#search_allocation").click(function(){
      var data = {
        "type": $("#type_search").val(),
        "value": $("#text_search").val()
      };
      $.get($(this).data("link"), data, function(data){
        $(".allocation_requested_list").replaceWith(data);
        $(".tb_list").tablesorter();
        $("th").last().addClass("sorter-false");
      });
    });

  });

  function accept_or_reject(button){
    // if is a button to accept a profile request, the user must confirm his action
    if ($(button).hasClass("accept") && !confirm("#{I18n.t(:confirm_acceptance)}"))
      return false;

    $.put($(button).data("link"), function(data){
      if (typeof(data.msg) != "undefined")
        flash_message(data.msg, 'notice');
      var last_removed_tr = $(button).closest("tr").slideUp().remove();
      if ( !$(".allocation_requested_list tbody").children("tr").size() ){
        $(".allocation_requested_list table").hide();
        $(".allocation_requested_list .block_content_textntent").append("<div class='block_content block_content_text'>#{t(".none_pending_allocation")}</div>")
      }

      $("tbody.allocations").undo_action_by_flash_message({
        complement_success: function(data){
          $(".allocation_requested_list table").show();
          $(".allocation_requested_list .block_content .block_content").remove();

          if (last_removed_tr != "")
            $("tbody.allocations").prepend("<tr class='lines'>" + $(last_removed_tr).html() + "</div>");
        }
      });

    }).error(function(data){
      var data = $.parseJSON(data.responseText);
      if (typeof(data.msg) != "undefined")
        flash_message(data.msg, 'alert');
    });
  }
