.question_images
  .visuallyhidden= label_tag :img_alt, '', id: 'exam_question_question_question_images_img_alt', onfocus: 'sendFocusAudioError("exam_question_question_attributes_question_images_attributes_", "_img_alt", 6)', tabindex: '0'
  .visuallyhidden= label_tag :img_alt, '', id: 'exam_question_question_question_images_image_content_type'
  .visuallyhidden= label_tag :img_alt, '', id: 'question_question_images_img_alt', onfocus: 'sendFocusAudioError("question_question_images_attributes_", "_img_alt", 6)', tabindex: '0'
  .visuallyhidden= label_tag :img_alt, '', id: 'question_question_images_image_content_type'
  
  = render partial: 'questions/form/image', locals: { f: f, eq: nil }
  .input.string
    = f.add_nested_fields_link :question_images, t('.add_images'), class: 'btn'

.question_audios
  .visuallyhidden= label_tag :audio_description, '', id: 'exam_question_question_question_audios_description', onfocus: 'sendFocusAudioError("exam_question_question_attributes_question_audios_attributes_", "_audio_description", 6)', tabindex: '0'
  .visuallyhidden= label_tag :audio_description, '', id: 'exam_question_question_question_audios_audio_content_type'
  .visuallyhidden= label_tag :audio_description, '', id: 'question_question_audios_description', onfocus: 'sendFocusAudioError("question_question_audios_attributes_", "_audio_description", 6)', tabindex: '0'
  .visuallyhidden= label_tag :audio_description, '', id: 'question_question_audios_audio_content_type'
  .visuallyhidden= label_tag :audio_description, '', id: 'exam_question_question_question'


  = render partial: 'questions/form/audio', locals: { f: f, eq: nil }
  .input.string
    = f.add_nested_fields_link :question_audios, t('.add_audios'), class: 'btn'
- unless @exam_question.blank?

  - disabled = f.object.disabled_option(@exam_question.exam_id) ? true : nil
  - checked = f.object.checked_option(@exam_question.exam_id) ? false : true

  .labels
    #question_text
      #associated_text
        = f.label t('questions.form.text.associated_text'), id: 'form_associated_text'
      #associated_radio  
        = f.collection_radio_buttons :question_text_id, [[true, t('questions.form.text.import')], [false, t('questions.form.text.new')]], :first, :last, default: false, checked: checked, disabled: disabled

    = render partial: 'questions/form/text', locals: { f: f, eq: nil } 

.form-actions.right_buttons
  = button_to_function t(:back), 'back()', class: 'btn btn_default', type: 'button', id: '_back_media'
  = button_to_function t('questions.form.info.continue'), 'go_to_items()', class: 'btn btn_main btn_lightbox question_media_button', alt: t(:save), type: 'button'


:javascript

  $(function(){
    
    if("#{checked}"!='false')
      $('#text').hide();
    else  
      $('#import').hide();

    $('#exam_question_question_attributes_question_text_id_false').on('click', function(){
      $('#text').show();
      $('#import').hide();
    });
    $('#exam_question_question_attributes_question_text_id_true').on('click', function(){
      $('#text').hide();
      $('#import').show();
    });  

  })    