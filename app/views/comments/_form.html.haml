= simple_form_for(@comment, html: { id: 'comment_form', multipart: true }) do |f|
  = f.hidden_field :academic_allocation_user_id, value: f.object.academic_allocation_user_id
  = f.input :score_type, as: :hidden,  input_html: { value: @score_type }

  .comment_inner_content.comment_area= f.input :comment, as: :ckeditor, label: false
  .forum_post_attachment
    = f.add_nested_fields_link :files, t('.attach_file'), class: 'btn'
    = render partial: 'extra_tools/speech2text', locals: {class_name: 'inline', ckeditor: true, div_id: 'comment_comment', number: '', field: ''}

    .comment_button
      = button_tag t(:cancel), class: 'btn btn_caution cancel_comment', type: :button
      = button_tag t(:save), class: 'btn btn_main save_comment', type: :button

    .comment_files
      %h3.attachment_title{class: f.object.new_record? || f.object.files.map(&:id).compact.empty? ? 'invisible' : ''}= t(".attached_files")
      .files
        .input.string
          = render partial: 'common_between_pages/file', locals: { f: f }


= javascript_include_tag 'ckeditor/init', 'tooltip', 'file_upload'

:javascript

  $(function(){
    CKEDITOR_BASEPATH = "#{request.env['RAILS_RELATIVE_URL_ROOT']}/assets/ckeditor/";
    CKEDITOR.editorConfig = function(config) {
      config.toolbar =
        [
          { name: 'clipboard', items : [ 'PasteFromWord', '-', 'Undo', 'Redo' ] },
          { name: 'styles', items : [ 'Styles', 'Format', 'Font', 'FontSize', 'TextColor' ] },
          { name: 'basicstyles', items : [ 'Bold', 'Italic', 'Underline', 'Strike', '-', 'RemoveFormat' ] },
          { name: 'links', items : [ 'Link', 'Unlink', 'Image', 'Smiley' ] },
          { name: 'insert', items : ['EqnEditor'] }
        ];

      config.extraPlugins = 'eqneditor,smiley';
      config.startupFocus = true;
      config.height = '130px';
    };

    // remove previous observers to click to add files
    $(document).off('fields_added.nested_form_fields');
    // when click to add files
    $(document).on("fields_added.nested_form_fields", function(event) {
      // gets last file input - it will be a blank one
      var last_file = $('#comment_form #files input[type="file"]:last');
      // click to choose file
      last_file.click();
      // remove previous observers on file input
      $('#comment_form #files input[type="file"]').off('change');
      $('#comment_form .comment_files .attachment_title').removeClass('invisible');
      // observe file input
      last_file.change(function(){
        // when it changes, add choosen file to list as a name and with a remove button
        var last_form_input = $('#comment_form #files .duplicatable_nested_form:last .input');
        last_form_input.prepend("<div id='file'>"+this.files[0].name+" ( "+(this.files[0].size/1048576).toFixed(2)+"MB ) </div>");
        last_form_input.next('.info').removeClass('invisible');
      });
    });
    $(document).on("fields_removed.nested_form_fields", function(event) {
      var count_files = $('#comment_form ul#files li #file:visible').length;
      if(count_files<1)
        $('#comment_form .comment_files .attachment_title').addClass('invisible');
    });

  });
