#ip_form
  .top
    .input#current_ip
      = link_to t('.current_ip_real', ip: ':get_remote_ip'), '#', class: 'btn'

    .input.string.add
      = f.add_nested_fields_link :ip_reals, t('.add_new_ip_reals'), class: 'btn btn_main'

  = f.nested_fields_for :ip_reals, wrapper_tag: :div do |ip|
    - can_destroy = (ip.object.new_record? || ip.object.can_destroy?)
    - select_ip = ip.object.ip_v6.blank? ? 'ipv4' : 'ipv6'
    - very_ipv6 = select_ip == 'ipv6' ? 'ipv6' : false
    = label_tag t(".select_type"), nil, class: "select_ip_label"
    = select_tag "ip_type", options_for_select([["IPV4", "ipv4"], ["IPV6", "ipv6"]], selected: select_ip), class: "select_ip_type", onchange: "toggleIP(this)", disabled: !can_destroy
    = ip.input :ip_v4, as: :string, label: false, input_html: { size: 15, class: "ip_v4 left #{(very_ipv6 ? 'invisible' : '')}"}
    = ip.input :ip_v6, as: :string, label: false, input_html: { size: 40, class: "ip_v6 left #{(very_ipv6 ? '' : 'invisible')}"}
    - unless ip.object.updated_at.blank?
      = content_tag(:i, nil, class: 'icon-clock', :'data-tooltip' => t('.updated_at', date: l(ip.object.updated_at, format: :clock)), :'aria-label' => t('.updated_at', date: l(ip.object.updated_at, format: :clock)))
    = ip.hidden_field :very_ipv6, value: very_ipv6, class: "_very_ipv6"
    - if can_destroy
      = ip.remove_nested_fields_link content_tag(:i, nil, class: 'icon-trash btn')


= javascript_include_tag 'tooltip', 'ip', 'jquery.mask'

:javascript
  $(function(){
    mask_ip($(".ip_v4"));
  });
