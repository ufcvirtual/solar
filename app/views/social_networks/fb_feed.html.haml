= stylesheet_link_tag "fonts/fonts"
= stylesheet_link_tag "fonts/icons"
= stylesheet_link_tag "misc/facebook"
= stylesheet_link_tag "jquery.qtip.min"

= javascript_include_tag "jquery"
= javascript_include_tag "jquery.qtip.min"
= javascript_include_tag "tooltip"
= javascript_include_tag "social_networks"

.head
  = link_to(content_tag(:i, nil, :class=>'icon-write new_post_button'), '#', 'data-tooltip' => t(:publish, :scope => [:facebook]))
  = link_to(content_tag(:i, nil, :class=>'icon-cycle'), '#', :onclick => 'location.reload(true);', :class => 'feed', 'data-tooltip' => t(:update_feed, :scope => [:facebook]))
  = content_tag(:i, nil, class: 'icon-star star')

  .new_post
    %form{:action => fb_post_wall_social_networks_path}
      %input{type: 'hidden', name:'gid', value: @gid}
      %textarea{:name => 'post', :placeholder => t(:placeholder, :scope => [:facebook])}
      .bar_input
        %input{:type => 'submit',:value => t(:publish, :scope => [:facebook])}
 

- if @fb_posts.present?
  - @fb_posts.each do |fb_post|
    .post
      .post_header
        .user_avatar
          = image_tag "https://graph.facebook.com/#{fb_post['from']['id']}/picture", :size => "26x26", :alt => "User Image"
        .user_info
          %span.username
            = fb_post['from']['name']
          %span.date
            = l(fb_post['created_time'].to_time.in_time_zone(Time.zone) , format: :clock)

      .post_content
        = fb_post['message']
        .post_image
          = image_tag fb_post['picture'].gsub('_s','_n') if fb_post['type'].eql? 'photo' 
          = image_tag fb_post['picture'] if fb_post['type'].eql? 'video' or fb_post['type'].eql? 'link' or fb_post['type'].eql? 'swf'
        .post_url
          %a.link{href: "#{fb_post['link']}"}= t(:original_content, :scope => [:facebook]) unless fb_post['type'].eql? 'status'

- elsif @fb_msg_groups.present?
  - @fb_msg_groups.each do |fb_msg_group|
    .post
      .post_header
        .user_avatar
          = image_tag "https://graph.facebook.com/#{fb_msg_group['from']['id']}/picture", :size => "26x26", :alt => "User Image"
        .user_info
          %span.username
            = fb_msg_group['name']
          %span.date
            = l(fb_msg_group['created_time'].to_time.in_time_zone(Time.zone), format: :clock)
      .post_content
        = fb_msg_group['message']
        .post_image
          = image_tag fb_msg_group['picture'].gsub('_s','_n') if fb_msg_group['type'].eql? 'photo' 
          = image_tag fb_msg_group['picture'] if fb_msg_group['type'].eql? 'video' or fb_msg_group['type'].eql? 'link' or fb_msg_group['type'].eql? 'swf'
        .post_url
          %a.link{href: "#{fb_msg_group['link']}"}= t(:original_content, :scope => [:facebook]) unless fb_msg_group['type'].eql? 'status'

:javascript
  var last_post_time = "#{@fb_posts.blank? ? @fb_msg_groups.first['created_time'] : @fb_posts.first['created_time']}";
  var new_post_path = "#{@fb_posts.blank? ? fb_feed_group_new_social_networks_path : fb_feed_new_social_networks_path}";

  function verifyFeed(){
    $.get(new_post_path, function(data){
      if (data.new_time > last_post_time){
       $(".icon-cycle").addClass("new_feed");
       $(".star:hidden").show();
      }
    });
  }

  $(function(){
    setInterval(verifyFeed, 2000);
  });