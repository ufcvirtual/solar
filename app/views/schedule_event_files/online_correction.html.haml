!!!
%html{lang: I18n.locale.to_s.gsub('_', '-')}
  %head
    %meta{charset: 'utf-8'}
    %meta{name:'viewport', content:'width=device-width, initial-scale=1, shrink-to-fit=no'}
    %title= show_breadcrumb_title
    = stylesheet_link_tag "themes/theme_" + "#{user_session[:theme]}", id: "themes"
    = stylesheet_link_tag "application", "viewer"
    = javascript_include_tag 'jquery-3.3.1.min', 'pdfjs/pdf', 'online_correction_files'
  %body
    %header#topbar
      .container-topbar
        .solar-logo
          = image_tag 'solar_logo_small.png', alt: t(:mysolar_alt_img_solar), id: "solar_logo"
        %ul.topbar-options
          %li#save
            %a{href: "#", onclick: ""}= t(:save)
          %li#tools
            %a{href: "#", onclick: "submenuToggle(event, this)"}= "Ferramentas"
            %ul.submenu
              %li
                %a#text-tool{href: "#", onclick: "toolChanger(event, this)"}= "Texto"
                %i.icon-write
              %li
                %a#brush-tool{href: "#", onclick: "toolChanger(event, this)"}= "Pincel"
                %i.icon-database
              %li
                %a#eraser-tool{href: "#", onclick: "toolChanger(event, this)"}= "Borracha"
                %i.icon-erase
          %li#user
            = image_tag current_user.user_photo(:small), alt: "#{t(:mysolar_alt_img_user)} #{current_user.nick}", id: "image_user", :'aria-hidden' => 'true'
            = current_user.nick
    -# %button{onclick: "javascript:undo();return false;"}= "Undo"
    -# %button{onclick: "javascript:redo();return false;"}= "Redo"
    %main.container

:javascript
  $(function(){
    if (!canvasSupport()) { return; } // Verify if the browser support HTML5 Canvas

    var url = "#{@file_path}";

    PDFJS.getDocument(url).then(function(pdf){
      // Get main#container and cache it for later use
      var container = document.querySelector("main");

      // Loop from 1 to total_number_of_pages in PDF document
      for (var i = 1; i <= pdf.numPages; i++) {
        // Get desired page
        pdf.getPage(i).then(function(page) {
          var scale = 1.5; // Set scale (zoom) level
          var viewport = page.getViewport(scale); // Get viewport (dimensions)

          var div = document.createElement("div"); // Create div where the page will be rendered
          div.setAttribute("id", "page-" + (page.pageIndex + 1)); // Set id attribute with page-pdf_page_number format
          div.setAttribute("style", "position: relative"); // This will keep positions of child elements as per our needs
          container.appendChild(div); // Append div within main#container

          var canvas = document.createElement("canvas"); // Create a new Canvas element
          canvas.setAttribute('id', "canvas-" + (page.pageIndex + 1)); // Set ID for the Canvas element
          div.appendChild(canvas); // Append Canvas within div#page-pdf_page_number

          var context = canvas.getContext('2d'); // Fetch canvas 2d context
          canvas.height = viewport.height; // Set height dimension to Canvas
          canvas.width = viewport.width; // Set width dimension to Canvas

          // Prepare object needed by render method
          var renderContext = {
            canvasContext: context,
            viewport: viewport
          };

          // Render PDF page
          page.render(renderContext)
            .then(function(){
              $("canvas").mouseover(function(event){
                var canvasID = "#" + $(this).attr('id');

                var canvas = document.querySelector(canvasID);
                var context = canvas.getContext('2d');

                paint(canvas, context);
              });
            });
        });
      }
    });
  });
