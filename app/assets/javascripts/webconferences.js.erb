function save_webconference(){
  $('form#webconference_form').serialize_and_submit({
    replace_list: $('.list_webconferences')
  });
}

function access_webconference(obj){
  $.get($(obj).parent().data('url'), function(data){
    var web = window.open(data.url,'_blank');
    if(!web || web.closed || typeof web.closed=='undefined')
      flash_message("<%= I18n.t('webconferences.warning.blocked')%>", 'warning');
  }).error(function(data){
    var response = JSON.parse(data.responseText);
    if (typeof(response.alert) != "undefined")
      flash_message(response.alert, 'alert');
  });
}

function list_access(obj){
  if($(obj).parent().hasClass('disabled'))
    return false;

  $(obj).parent().addClass('disabled');

  $.get($(obj).parent().data('url'), function(data){
    $(obj).call_fancybox({
      open: true,
      content: data
    });
    $(obj).parent().removeClass('disabled');
  }).error(function(data){
    $(obj).parent().removeClass('disabled');
    var response = JSON.parse(data.responseText);
    if (typeof(response.alert) != "undefined")
      flash_message(response.alert, 'alert');
  });
}

$(function(){
  $(".enunciation_more").click(function(){
    $(".enunciation_slice, .enunciation_more", $(this).parent().parent()).css("display", "none");
    $(".enunciation_complete, .enunciation_less", $(this).parent().parent()).css("display", "block");
    focus_element($(".enunciation_complete", $(this).parent().parent()));
    return false;
  });
  $(".enunciation_less").click(function(){
    $(".enunciation_slice, .enunciation_more", $(this).parent().parent()).css("display", "block");
    $(".enunciation_complete, .enunciation_less", $(this).parent().parent()).css("display", "none");
    focus_element($(".enunciation_slice", $(this).parent().parent()));
    return false;
  });

  $(".expand, .compress").click(function(){
    $(this).parent().hide();
    $($(this).parent().siblings()[0]).show();
  });

  $(".link_new_webconference").not(".disabled").call_fancybox();

  $('.delete_webconference').click(function(){
    if ($(this).attr('disabled') == 'disabled'){
      flash_message("<%=I18n.t(:choose_at_least_one, scope: 'webconferences.list')%>", "alert");
      return false;
    }

    if (!confirm("<%=I18n.t(:message_confirm)%>"))
      return false;

    var webconferences = $('.ckb_webconference:checked', $(this).parents("div.list_webconferences"));
    var webconference_ids = $('.ckb_webconference:checked', $(this).parents("div.list_webconferences")).map(function() { return this.value; }).get();

    if (webconference_ids.length) {
      $.delete($(this).data('link-delete').replace(':id', webconference_ids), function(data){
        flash_message(data.message, data.type_message);
        webconferences.parents('tr').fadeOut().remove();

        $(".btn_edit, .btn_del").attr("disabled", true);
      }).error(function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
      });
    }
  });

  $('.delete_record').click(function(){
     if ($(this).attr('disabled') == 'disabled'){
      flash_message("<%=I18n.t(:choose_at_least_one, scope: 'webconferences.list')%>", "alert");
      return false;
    }

    var webconferences = $('.ckb_webconference:checked', $(this).parents("div.preview_webconferences"));
    var webconference_ids = $('.ckb_webconference:checked', $(this).parents("div.preview_webconferences")).map(function() { return this.value; }).get();

    if (!webconference_ids.length){
      flash_message("<%=I18n.t(:choose_at_least_one, scope: 'webconferences.list')%>", "alert");
      return false;
    }

    if (!confirm("<%=I18n.t(:message_confirm)%>"))
      return false;

    if (webconference_ids.length) {
      $.delete($(this).data('link-remove').replace(':id', webconference_ids), function(data){
        webconferences.parents('tr').find(".status_webconference").html("<%=I18n.t(:removed_record, scope: 'webconferences.list')%>");
        $(".all_webconferences").prop("checked", false);
        flash_message(data.notice, 'notice');
      }).error(function(data){
        var data = $.parseJSON(data.responseText);
        if (typeof(data.alert) != "undefined")
          flash_message(data.alert, 'alert');
        });
    }
  });

  $(".btn_edit").click(function(){
    if ($(this).attr('disabled') == 'disabled'){
      flash_message("<%=I18n.t(:choose_one, scope: 'webconferences.list')%>", "alert");
      return false;
    }

    var webconference_ids = $('.ckb_webconference:checked', $(this).parents("div.list_webconferences")).map(function() { return this.value; }).get();
    var url_edit = $(this).data('link-edit').replace(':id', webconference_ids);
    $(this).call_fancybox({href : url_edit, open: true});

  });

  $(".all_webconferences").nice_checkbox();
});



/* #######################################################
                      REPORTS
####################################################### */

// Datepicker
$('#txt_deployment').datepicker();

var editChangeLogId = null;

// Fill table with data
function populateTable() {

  var tableContent = ''; // Empty content string

  // jQuery AJAX call for JSON
  $.getJSON( '/change_logs/?type=Webconference', function( data ) {

    // For each item in our JSON, add a table row and cells to the content string
    $.each(data, function(){
      tableContent += '<tr class="lines">';
      tableContent += '<td id="deployment_date">' + (this.deployment == null ? "<%=I18n.t(:changelog_pending, scope: 'webconferences.report')%>" : convertDate(this.deployment) ) + '</td>';
      tableContent += '<td>' + this.description + '</td>';
      tableContent += '<td><div class="btn-group"><a href="#" class="linkEditChangeLog btn" data-id="' + this.id + '"><i class="icon-edit"></i></a>';
      tableContent += '<a href="#" class="linkDeleteChangeLog btn" data-id="' + this.id + '"><i class="icon-trash"></i></a></div></td>';
      tableContent += '</tr>';
  });

    $('#changeLog').html(tableContent); // Inject the whole content string into our existing HTML table
  });
};

function deleteChangeLog(event) {

  event.preventDefault();

  // Check and make sure they really want to delete
  if (!confirm("<%=I18n.t(:message_confirm)%>"))
    return false;

  // If they did, do our delete
  $.ajax({
    type: 'DELETE',
    url: '/change_logs/' + $(this).data('id')
  }).done(function( response ) {
    populateTable(); //response is the object that was deleted because that's what we returned in the destroy controller method
    editChangeLogId = null; //set id to null
  });
};

function saveChangeLog(event) {
  event.preventDefault();

  var chglog = {
    'deployment': $('#txt_deployment').val(),
    'description': $('#txt_description').val(),
    'academic_tool_type': 'Webconference'
  };

  var chglogFormatted = {
    'change_log' : chglog
  };

  if (editChangeLogId == null) { // New
    $.ajax({
      type: 'POST',
      data: chglogFormatted,
      url: '/change_logs',
      dataType: 'JSON'
    }).done(function( response ) {

    populateTable(); // Update the table

    $('input').val(''); //erase input

    }).fail(function( jqXHR, textStatus ) {
      alert(jqXHR.responseText);
    });
  }
  else { // Edit
    $.ajax({
      type: 'PUT',
      data: chglogFormatted,
      url: '/change_logs/' + editChangeLogId,
      dataType: 'JSON'
    }).done(function( response ) {

      populateTable(); // Update the table

      $('input').val(''); //erase input

      editChangeLogId = null; //set id to null

    }).fail(function( jqXHR, textStatus ) {
      alert(jqXHR.responseText);
    });
  }
};

function editChangeLog(event) {
  event.preventDefault(); // Prevent Link from Firing

  var thisId = $(this).data('id'); // Retrieve the id from the link

  $.getJSON('/change_logs/' + thisId).done(function(data) {

    //Populate Edit Form
    $('#txt_deployment').val(convertDate(data.deployment));
    $('#txt_description').val(data.description);

    editChangeLogId = data.id;
   })
}

populateTable(); // Populate the user table on initial page load

$('#saveChangeLogButton').on('click', saveChangeLog); // Save link click
$('#changeLog').on('click', '.linkDeleteChangeLog', deleteChangeLog); // Delete link click
$('#changeLog').on('click', '.linkEditChangeLog', editChangeLog); // Show Edit Form

function convertDate(date) {
  if (date != null) { return new Date(date.replace(/-/, '/').replace(/-/, '/')).toLocaleDateString(); }
}