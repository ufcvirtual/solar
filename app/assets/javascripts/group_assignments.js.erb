<%# @encoding: UTF-8 %>
function select_group(element, event){
  if(event === undefined || event.which == 13 ) {
    $(".groups_column .selected").removeClass("selected");
    var label = ( $(element).hasClass("label") ? element : $(element).closest(".label") );
    $(label).addClass("selected");

    $.get($(element).data("url"), function(data){
      $(".participants_column .block_content").html(data);
      if ($(element).data("name") != undefined)
        var name = $(element).data("name");
      else{
        var text_field = $($(label).find("input#group_assignment_group_name")[0]).val();
        if (text_field == undefined)
          var name =  $(element).text();
        else
          var name = text_field;
      }
      $.fancybox.update();
      var message = $(label).data("message");
      if ( message != undefined && message != "")
        flash_message(message, "warning", "group_assignments.header");
      else if (text_field == undefined)
        erase_flash_messages();
      $(".participants_column h2").text("<%=I18n.t('group_assignments.index.participants')%> ( "+name+" )");
    });
  }

}

function add_participant(td, event){
  if(event === undefined || event.which == 13) {
    change_participant(td, "<%=Rails.application.routes.url_helpers.add_participant_group_assignment_path(':id', user_id: 'uid', score_type: 'scoretype')%>", "participants_column", "cross-square", "remove");
  }
}

function remove_participant(td, event){
  if(event === undefined || event.which == 13) {
    change_participant(td, "<%=Rails.application.routes.url_helpers.remove_participant_group_assignment_path(':id', user_id: 'uid', score_type: 'scoretype')%>", "students_without_groups_column", "plus-square", "add");
  }
}

function edit_group(icon, event){
  if(event === undefined || event.which == 13) {
    var label = $($(icon).closest(".label"));
    select_group(label, event);
    $.get("<%=Rails.application.routes.url_helpers.edit_group_assignment_path(':id')%>".replace(":id", label.data("group-id")), function(data){
      label.html(data);
    });
  }
}

function remove_group(icon, event){
  if (event !== undefined) {
    event.preventDefault();
    var keynum = event.which || event.keyCode;
  }

  if(event === undefined || keynum == 13) {
    var label = $($(icon).closest(".label"));
    if (confirm("<%=I18n.t('group_assignments.index.confirm')%>")) {
      $.delete("<%=Rails.application.routes.url_helpers.group_assignment_path(':id')%>".replace(":id", label.data("group-id")), function(data){
        label.remove();
        clear_participant_list();
        var new_table = $(".students_without_groups_column tbody");
        $.get("<%=Rails.application.routes.url_helpers.students_with_no_group_group_assignments_path(assignment_id: 'aid')%>".replace("aid", new_table.data("assignment-id")), function(data){
          new_table.html(data);
          update_tables_with_no_data();
        });
      }).fail(function(data){
        show_error(data, null, "group_assignments.header");
      });
    }
  } else if (event.shiftKey && keynum == 9) {
    $(icon).prev().focus();
  } else if (keynum == 9 && $(icon).closest(".label").next().find("a").length == 0) {
    var next_columns = $(icon).closest(".groups_column").nextAll();
    if ($(next_columns).first().find("a").length != 0) {
      $(next_columns).first().find("a").first().focus();
    } else if ($(next_columns).last().find("a").length != 0){
      $(next_columns).last().find("a").first().focus();
    } else {
      $(".fancybox-close").focus();
    }
  } else if (keynum == 9) {
    $(icon).closest(".label").nextAll().find("a").first().focus();
  }
}

function cancel_group(icon, event){
  if(event === undefined || event.which == 13) {
    var label = $($(icon).closest(".label"));
    $.get("<%=Rails.application.routes.url_helpers.group_assignment_path(':id')%>".replace(":id", label.data("group-id")), function(data){
      label.html(data);
    });
  }
}

function rename_group(icon, event){
  if (event === undefined || event.which == 13) {
    var label = $($(icon).closest(".label"));
    var form  = $($(icon).closest("form"));
    $.put("<%=Rails.application.routes.url_helpers.group_assignment_path(':id')%>".replace(":id", label.data("group-id")), form.serialize(), function(data){
      $.get("<%=Rails.application.routes.url_helpers.group_assignment_path(':id')%>".replace(":id", label.data("group-id")), function(data){
        label.html(data);
        select_group(label);
      });
    }).fail(function(data){
      show_error(data, null, "group_assignments.header");
    });
  }
}

function clear_participant_list(){
  $(".participants_column tbody").parents(".block_content").first().find(".text_none").first().addClass("hide_message");
  $(".participants_column tbody").html('<tr><td class="text_none" colspan="2">Selecione um grupo</td></tr>');
  $(".participants_column h2").text("<%=I18n.t('group_assignments.index.participants')%>");
}

function select_assignment(element, event){
  if (event === undefined || event.which == 13) {
    $(".selected").removeClass("selected");
    var label = ( $(element).hasClass("label") ? element : $(element).closest(".label") );
    $(label).addClass("selected");
    $.get($(label).data("url"), function(data){
      $(".groups_column tbody").html(data);
      $(".groups_column h2").text("<%=I18n.t('group_assignments.import_list.groups')%> ( "+$(label).text()+" )");
      clear_participant_lis();
      $.fancybox.update();
    }).fail(function(data){
      show_error(data, null, "group_assignments.header");
    });
  }
}

function import_group(button){
  var from_group_id = $($(".label.selected")[0]).data("assignment-id");
  $.post($(button).data("url").replace("aid", from_group_id), function(data1){
    $.fancybox.close();
    update_list(data1.notice);
  }).fail(function(data){
    show_error(data, null, "group_assignments.header");
  });
}

function change_participant(td, url, tbody, icon, method){
  var tr = $(td).closest("tr.lines");
  var group_id = $($(".label.selected")[0]).data("group-id");
  if (group_id == null)
    show_error("", '<%=I18n.t("group_assignments.index.select_a_group")%>', "group_assignments.header");
  else{
    $.put(url.replace(":id", group_id).replace("uid", tr.data("user-id")).replace('scoretype', $('.group_assignments.header').data('score')), function(data){

      after_evaluate('Assignment', $('.group_assignments.header').data('score'), data.ac, tr.data('user-id'), data, group_id);

      if(data.call_url == undefined){
        var new_table = $("." + tbody + " tbody");
        $(tr).appendTo(new_table);
        update_tables_with_no_data();
        if (method == "add")
          var tooltip = '<%=I18n.t("group_assignments.index.add")%>';
        else
          var tooltip = '<%=I18n.t("group_assignments.index.remove")%>';

        $($(tr).find("td.icon")[0]).replaceWith('<td class="icon"><a href="#" onclick="'+method+'_participant(this)" onkeydown="'+method+'_participant(this, event)" data-url="'+url.replace(":id", group_id)+'" data-tooltip="'+tooltip+'" aria-label="'+tooltip+'"><i class="icon-'+icon+'"></i></a></td>');
      }else{
        $(tr).remove();
        $.get(data.call_url, function(data){
          $(".groups_column .labels").prepend(data);
        });
      }
    }).fail(function(data){
      show_error(data, null, "group_assignments.header");
    });
  }
}


function update_list(message){
  $.get("<%=Rails.application.routes.url_helpers.list_without_layout_assignments_path%>", function(data){
    $(".assignments_list").replaceWith(data);
    if (message != undefined)
      flash_message(message, "notice");
  });
}
