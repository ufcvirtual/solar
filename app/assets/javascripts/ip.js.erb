$(document).ready(function(event){
  var current_network_ip = "";
  var input_id_current_network_ip = "";
  var remove_button_network_ip = "";

  var url = "<%= Rails.application.routes.url_helpers.client_network_ip_path %>";

  $.get(url, function(data) {
    current_network_ip = data.network_ip;
    // Para teste
    if( !current_network_ip ) {
      $.get("https://api.ipify.org", function(data) {
        current_network_ip = data;
      });
    }
  }, "json");

  $("#current_ip > a").on("click keydown", function(event){
    event.preventDefault();
    var keynum = event.which || event.keyCode;
    if(keynum == 13 || event.type == 'click') {
      if(!verify_exists_ip(4) && !verify_exists_ip(6))
        add_fields_ip();
    }
  });

  function add_fields_ip(){
    $(".add_nested_fields_link").trigger("click");
    var allFormsIps = $(".string.optional.ip_v4");
    var allLocalNet = $("[class$='_ip_reals_use_local_network]");
    $(allFormsIps[allFormsIps.length - 1]).val(current_network_ip);
    $(allLocalNet[allLocalNet.length - 1]).find('input').val(1);
    input_id_current_network_ip = $(allFormsIps[allFormsIps.length - 1]).attr("id");
    remove_button_network_ip = input_id_current_network_ip.match(/\d+/)[0];
    $("#"+input_id_current_network_ip).closest(".nested_fields").find(".remove_nested_fields_link").attr("id", remove_button_network_ip);
    mask_ip(input_id_current_network_ip);
    mask_ip($(".ip_v4"));
  }

  function verify_exists_ip(ip_version) {
    fields = $(".string.optional.ip_v"+ ip_version+":visible");
    for(var i = 0; i < fields.length ; i++) {
      if( $(fields[i]).val() === current_network_ip ){
        input_id_current_network_ip = $(fields[i]).prop('id');
        $(fields[i]).prop('use_local_network', true);
        return true;
      }
    }
    return false;
  }

  $(document).on("fields_added.nested_form_fields", function(event) {
    mask_ip($(".ip_v4"));
  });

});

  function toggleIP(selected){
    if( $(selected).val() === "ipv4" ) {
      $(selected).parent().find(".ip_v4").show();
      $(selected).parent().find(".ip_v6").hide();
      $(selected).parent().find(".ip_v6").val('');
    } else if( $(selected).val() === "ipv6" ) {
      $(selected).parent().find(".ip_v4").hide();
      $(selected).parent().find(".ip_v4").val('');
      $(selected).parent().find(".ip_v6").show();
    }

  }

  function mask_ip(input){
    if ( (/ip_v4/i).test($(input).attr("id")) ) {
      $(input).mask('0ZZ.0ZZ.0ZZ.0ZZ', {
        translation: {
          'Z': {
            pattern: /[0-9]/, optional: true
          }
        }
      });
    }
  }
